[
  "tests/bin/test_ath_audit.py::test_ath_audit_runs",
  "tests/bin/test_ath_build.py::test_ath_build_runs",
  "tests/bin/test_ath_coverage.py::test_ath_coverage_runs",
  "tests/bin/test_ath_lint.py::test_ath_lint_runs",
  "tests/bin/test_ath_test.py::test_ath_test_runs",
  "tests/integration/test_cli_robustesse.py::TestCLIRobustesse::test_cli_concurrent_execution",
  "tests/integration/test_cli_robustesse.py::TestCLIRobustesse::test_cli_dry_run_mode",
  "tests/integration/test_cli_robustesse.py::TestCLIRobustesse::test_cli_environment_variables",
  "tests/integration/test_cli_robustesse.py::TestCLIRobustesse::test_cli_error_handling",
  "tests/integration/test_cli_robustesse.py::TestCLIRobustesse::test_cli_help_command",
  "tests/integration/test_cli_robustesse.py::TestCLIRobustesse::test_cli_invalid_argument",
  "tests/integration/test_cli_robustesse.py::TestCLIRobustesse::test_cli_missing_argument",
  "tests/integration/test_cli_robustesse.py::TestCLIRobustesse::test_cli_output_format",
  "tests/integration/test_cli_robustesse.py::TestCLIRobustesse::test_cli_timeout_handling",
  "tests/integration/test_cli_robustesse.py::TestCLIRobustesse::test_cli_verbose_mode",
  "tests/integration/test_cli_robustesse.py::TestCLIRobustesse::test_cli_version_command",
  "tests/integration/test_cli_robustesse.py::test_cli_basic_functionality",
  "tests/integration/test_cli_robustesse.py::test_cli_integration_workflow",
  "tests/integration/test_end_to_end.py::TestEndToEndIntegration::test_concurrent_generation",
  "tests/integration/test_end_to_end.py::TestEndToEndIntegration::test_error_handling_end_to_end",
  "tests/integration/test_end_to_end.py::TestEndToEndIntegration::test_generation_end_to_end_api",
  "tests/integration/test_end_to_end.py::TestEndToEndIntegration::test_generation_end_to_end_cli",
  "tests/integration/test_end_to_end.py::TestEndToEndIntegration::test_generation_end_to_end_web",
  "tests/integration/test_end_to_end.py::TestEndToEndIntegration::test_integration_with_external_tools",
  "tests/integration/test_end_to_end.py::TestEndToEndIntegration::test_performance_end_to_end",
  "tests/integration/test_end_to_end.py::TestEndToEndIntegration::test_workflow_complete",
  "tests/integration/test_end_to_end.py::test_generation_end_to_end_simple",
  "tests/integration/test_yaml_validity.py::TestYAMLValidity::test_blueprint_yaml_structure",
  "tests/integration/test_yaml_validity.py::TestYAMLValidity::test_config_yaml_validity",
  "tests/integration/test_yaml_validity.py::TestYAMLValidity::test_yaml_anchors_and_aliases",
  "tests/integration/test_yaml_validity.py::TestYAMLValidity::test_yaml_complex_types",
  "tests/integration/test_yaml_validity.py::TestYAMLValidity::test_yaml_error_handling",
  "tests/integration/test_yaml_validity.py::TestYAMLValidity::test_yaml_file_roundtrip",
  "tests/integration/test_yaml_validity.py::TestYAMLValidity::test_yaml_performance",
  "tests/integration/test_yaml_validity.py::TestYAMLValidity::test_yaml_security",
  "tests/integration/test_yaml_validity.py::TestYAMLValidity::test_yaml_syntax_invalidity",
  "tests/integration/test_yaml_validity.py::TestYAMLValidity::test_yaml_syntax_validity",
  "tests/integration/test_yaml_validity.py::TestYAMLValidity::test_yaml_unicode_support",
  "tests/integration/test_yaml_validity.py::TestYAMLValidity::test_yaml_validation_schema",
  "tests/integration/test_yaml_validity.py::test_yaml_basic_functionality",
  "tests/integration/test_yaml_validity.py::test_yaml_file_operations",
  "tests/test_adaptive_distillation.py::TestAdaptiveDistiller::test_empty",
  "tests/test_adaptive_distillation.py::TestAdaptiveDistiller::test_feedback_success_failure",
  "tests/test_adaptive_distillation.py::TestAdaptiveDistiller::test_majority_voting",
  "tests/test_adaptive_distillation.py::TestAdaptiveDistiller::test_save_and_load_history",
  "tests/test_adaptive_distillation.py::TestAdaptiveDistiller::test_update_preferences",
  "tests/test_advanced_analytics_unit.py::TestAdvancedAnalytics::test_analyze_coverage",
  "tests/test_advanced_analytics_unit.py::TestAdvancedAnalytics::test_analyze_performance",
  "tests/test_advanced_analytics_unit.py::TestAdvancedAnalytics::test_constructor",
  "tests/test_advanced_analytics_unit.py::TestAdvancedAnalytics::test_generate_dashboard",
  "tests/test_advanced_analytics_unit.py::TestAdvancedAnalytics::test_generate_summary",
  "tests/test_advanced_analytics_unit.py::TestAdvancedAnalytics::test_print_report",
  "tests/test_advanced_analytics_unit.py::TestAdvancedAnalytics::test_run",
  "tests/test_agent_network.py::TestAgentUnified::test_agent_imports",
  "tests/test_agent_network.py::TestAgentUnified::test_agent_unified_basic",
  "tests/test_ai_robust.py::TestRobustAI::test_build_fallback_chain",
  "tests/test_ai_robust.py::TestRobustAI::test_call_ollama_timeout",
  "tests/test_ai_robust.py::TestRobustAI::test_classify_project_complexity",
  "tests/test_ai_robust.py::TestRobustAI::test_detect_available_models",
  "tests/test_ai_robust.py::TestRobustAI::test_fallback_chain_behavior",
  "tests/test_ai_robust.py::TestRobustAI::test_generate_blueprint_with_mock",
  "tests/test_ai_robust.py::TestRobustAI::test_generate_documentation_with_mock",
  "tests/test_ai_robust.py::TestRobustAI::test_get_dynamic_prompt",
  "tests/test_ai_robust.py::TestRobustAI::test_review_code_with_mock",
  "tests/test_ai_robust.py::test_fallback_and_distillation_qwen_mistral",
  "tests/test_ai_robust.py::test_fallback_ia_qwen_mistral",
  "tests/test_ai_robust.py::test_prompt_templates",
  "tests/test_ai_robust.py::test_robust_ai_integration",
  "tests/test_ai_robust_integration.py::TestAIRobustIntegration::test_complete_workflow_simple_project",
  "tests/test_ai_robust_integration.py::TestAIRobustIntegration::test_different_project_complexities",
  "tests/test_ai_robust_integration.py::TestAIRobustIntegration::test_error_handling",
  "tests/test_ai_robust_integration.py::TestAIRobustIntegration::test_fallback_chain_behavior",
  "tests/test_ai_robust_integration.py::TestAIRobustIntegration::test_model_detection",
  "tests/test_ai_robust_integration.py::TestAIRobustIntegration::test_prompt_contexts",
  "tests/test_ai_robust_integration.py::test_ai_robust_memory_usage",
  "tests/test_ai_robust_integration.py::test_ai_robust_performance",
  "tests/test_ai_robust_unit.py::TestAiRobust::test_fallback_ia",
  "tests/test_ai_robust_unit.py::TestAiRobust::test_query_mistral",
  "tests/test_ai_robust_unit.py::TestAiRobust::test_query_qwen",
  "tests/test_ai_robust_unit.py::TestAiRobust::test_robust_ai_instance",
  "tests/test_ai_robust_unit.py::TestAiRobust::test_robustai_classify_project_complexity",
  "tests/test_ai_robust_unit.py::TestAiRobust::test_robustai_generate_blueprint",
  "tests/test_ai_robust_unit.py::TestAiRobust::test_robustai_generate_documentation",
  "tests/test_ai_robust_unit.py::TestAiRobust::test_robustai_get_dynamic_prompt",
  "tests/test_ai_robust_unit.py::TestAiRobust::test_robustai_review_code",
  "tests/test_analytics.py::TestAnalyticsModule::test_analytics_module_import",
  "tests/test_analytics.py::TestAnalyticsModule::test_analytics_with_empty_project",
  "tests/test_analytics.py::TestAnalyticsModule::test_analytics_with_nonexistent_project",
  "tests/test_analytics.py::TestAnalyticsModule::test_analyze_project",
  "tests/test_analytics.py::TestAnalyticsModule::test_generate_analytics_html",
  "tests/test_analytics.py::TestAnalyticsModule::test_generate_heatmap_data",
  "tests/test_analytics.py::TestAnalyticsModule::test_generate_technical_debt_analysis",
  "tests/test_analytics.py::test_analytics_integration",
  "tests/test_analytics_complete.py::TestAnalyticsEngine::test_analyze_code_complexity",
  "tests/test_analytics_complete.py::TestAnalyticsEngine::test_analyze_code_complexity_empty_directory",
  "tests/test_analytics_complete.py::TestAnalyticsEngine::test_analyze_dependencies",
  "tests/test_analytics_complete.py::TestAnalyticsEngine::test_analyze_dependencies_no_requirements",
  "tests/test_analytics_complete.py::TestAnalyticsEngine::test_analyze_documentation_coverage",
  "tests/test_analytics_complete.py::TestAnalyticsEngine::test_analyze_git_metrics",
  "tests/test_analytics_complete.py::TestAnalyticsEngine::test_analyze_performance_metrics",
  "tests/test_analytics_complete.py::TestAnalyticsEngine::test_analyze_security_metrics",
  "tests/test_analytics_complete.py::TestAnalyticsEngine::test_analyze_test_coverage",
  "tests/test_analytics_complete.py::TestAnalyticsEngine::test_analyze_trends",
  "tests/test_analytics_complete.py::TestAnalyticsEngine::test_calculate_project_score",
  "tests/test_analytics_complete.py::TestAnalyticsEngine::test_compare_with_baseline",
  "tests/test_analytics_complete.py::TestAnalyticsEngine::test_error_handling_file_not_found",
  "tests/test_analytics_complete.py::TestAnalyticsEngine::test_error_handling_permission_error",
  "tests/test_analytics_complete.py::TestAnalyticsEngine::test_export_metrics_to_json",
  "tests/test_analytics_complete.py::TestAnalyticsEngine::test_export_metrics_to_yaml",
  "tests/test_analytics_complete.py::TestAnalyticsEngine::test_generate_comprehensive_report",
  "tests/test_analytics_complete.py::TestAnalyticsEngine::test_generate_recommendations",
  "tests/test_analytics_complete.py::TestAnalyticsEngine::test_generate_visualization_data",
  "tests/test_analytics_complete.py::TestAnalyticsEngine::test_init_with_project_path",
  "tests/test_analytics_complete.py::TestAnalyticsEngine::test_integration_full_analysis",
  "tests/test_analytics_complete.py::TestAnalyticsIntegration::test_full_analytics_workflow",
  "tests/test_analytics_complete.py::TestAnalyticsIntegration::test_metrics_persistence",
  "tests/test_analytics_complete.py::test_analyze_project_metrics",
  "tests/test_analytics_complete.py::test_generate_analytics_report",
  "tests/test_analytics_unit.py::TestAnalytics::test_analyze_project",
  "tests/test_analytics_unit.py::TestAnalytics::test_generate_analytics_html",
  "tests/test_analytics_unit.py::TestAnalytics::test_generate_heatmap_data",
  "tests/test_analytics_unit.py::TestAnalytics::test_generate_technical_debt_analysis",
  "tests/test_athalia_simple.py::test_athalia_core_import",
  "tests/test_athalia_simple.py::test_essential_files_exist",
  "tests/test_athalia_simple.py::test_project_structure",
  "tests/test_audit_agent.py::TestAuditAgent::test_act_method_error_handling",
  "tests/test_audit_agent.py::TestAuditAgent::test_act_method_with_complex_prompt",
  "tests/test_audit_agent.py::TestAuditAgent::test_act_method_with_empty_prompt",
  "tests/test_audit_agent.py::TestAuditAgent::test_act_method_with_multiline_prompt",
  "tests/test_audit_agent.py::TestAuditAgent::test_act_method_with_simple_prompt",
  "tests/test_audit_agent.py::TestAuditAgent::test_act_method_with_special_characters",
  "tests/test_audit_agent.py::TestAuditAgent::test_agent_attributes",
  "tests/test_audit_agent.py::TestAuditAgent::test_agent_consistency",
  "tests/test_audit_agent.py::TestAuditAgent::test_agent_inheritance",
  "tests/test_audit_agent.py::TestAuditAgent::test_agent_performance",
  "tests/test_audit_agent.py::TestAuditAgent::test_audit_agent_initialization",
  "tests/test_audit_agent.py::TestAuditAgentIntegration::test_integration_with_code_analysis",
  "tests/test_audit_agent.py::TestAuditAgentIntegration::test_integration_with_real_audit_scenario",
  "tests/test_audit_intelligent.py::TestAuditIntelligent::test_audit_code_quality",
  "tests/test_audit_intelligent.py::TestAuditIntelligent::test_audit_complete",
  "tests/test_audit_intelligent.py::TestAuditIntelligent::test_audit_empty_project",
  "tests/test_audit_intelligent.py::TestAuditIntelligent::test_audit_performance",
  "tests/test_audit_intelligent.py::TestAuditIntelligent::test_audit_project_not_found",
  "tests/test_audit_intelligent.py::TestAuditIntelligent::test_audit_project_structure",
  "tests/test_audit_intelligent.py::TestAuditIntelligent::test_audit_security",
  "tests/test_audit_intelligent.py::TestAuditIntelligent::test_generate_audit_report",
  "tests/test_audit_intelligent.py::test_audit_integration",
  "tests/test_auto_cicd_unit.py::TestAutoCICD::test_constructor",
  "tests/test_auto_cicd_unit.py::TestAutoCICD::test_detect_languages",
  "tests/test_auto_cicd_unit.py::TestAutoCICD::test_detect_project_type_nodejs",
  "tests/test_auto_cicd_unit.py::TestAutoCICD::test_detect_project_type_python",
  "tests/test_auto_cicd_unit.py::TestAutoCICD::test_extract_dependencies_python",
  "tests/test_auto_cicd_unit.py::TestAutoCICD::test_find_entry_points",
  "tests/test_auto_cicd_unit.py::TestAutoCICD::test_generate_deployment_config",
  "tests/test_auto_cicd_unit.py::TestAutoCICD::test_generate_docker_config",
  "tests/test_auto_cicd_unit.py::TestAutoCICD::test_generate_github_actions",
  "tests/test_auto_cicd_unit.py::TestAutoCICD::test_get_created_files",
  "tests/test_auto_cicd_unit.py::TestAutoCICD::test_has_documentation",
  "tests/test_auto_cicd_unit.py::TestAutoCICD::test_has_tests",
  "tests/test_auto_cicd_unit.py::TestAutoCICD::test_setup_cicd",
  "tests/test_auto_cicd_unit.py::test_generate_github_ci_yaml",
  "tests/test_auto_cleaner_complete.py::TestAutoCleaner::test_calculate_cleanup_impact",
  "tests/test_auto_cleaner_complete.py::TestAutoCleaner::test_cleanup_build_artifacts",
  "tests/test_auto_cleaner_complete.py::TestAutoCleaner::test_cleanup_cache_directories",
  "tests/test_auto_cleaner_complete.py::TestAutoCleaner::test_cleanup_duplicate_files",
  "tests/test_auto_cleaner_complete.py::TestAutoCleaner::test_cleanup_empty_directories",
  "tests/test_auto_cleaner_complete.py::TestAutoCleaner::test_cleanup_ide_files",
  "tests/test_auto_cleaner_complete.py::TestAutoCleaner::test_cleanup_large_files",
  "tests/test_auto_cleaner_complete.py::TestAutoCleaner::test_cleanup_log_files",
  "tests/test_auto_cleaner_complete.py::TestAutoCleaner::test_cleanup_old_files",
  "tests/test_auto_cleaner_complete.py::TestAutoCleaner::test_cleanup_pyc_files",
  "tests/test_auto_cleaner_complete.py::TestAutoCleaner::test_cleanup_temporary_files",
  "tests/test_auto_cleaner_complete.py::TestAutoCleaner::test_cleanup_test_artifacts",
  "tests/test_auto_cleaner_complete.py::TestAutoCleaner::test_error_handling_file_not_found",
  "tests/test_auto_cleaner_complete.py::TestAutoCleaner::test_error_handling_invalid_yaml",
  "tests/test_auto_cleaner_complete.py::TestAutoCleaner::test_error_handling_permission_error",
  "tests/test_auto_cleaner_complete.py::TestAutoCleaner::test_generate_cleanup_report",
  "tests/test_auto_cleaner_complete.py::TestAutoCleaner::test_init_with_project_path",
  "tests/test_auto_cleaner_complete.py::TestAutoCleaner::test_integration_full_cleanup_workflow",
  "tests/test_auto_cleaner_complete.py::TestAutoCleaner::test_load_cleanup_config",
  "tests/test_auto_cleaner_complete.py::TestAutoCleaner::test_load_cleanup_config_default",
  "tests/test_auto_cleaner_complete.py::TestAutoCleaner::test_load_cleanup_history",
  "tests/test_auto_cleaner_complete.py::TestAutoCleaner::test_perform_full_cleanup",
  "tests/test_auto_cleaner_complete.py::TestAutoCleaner::test_save_cleanup_history",
  "tests/test_auto_cleaner_complete.py::TestAutoCleaner::test_scan_for_cleanup_candidates",
  "tests/test_auto_cleaner_complete.py::TestAutoCleanerIntegration::test_cleanup_with_custom_config",
  "tests/test_auto_cleaner_complete.py::TestAutoCleanerIntegration::test_full_cleanup_workflow",
  "tests/test_auto_cleaner_complete.py::test_analyze_cleanup_needs",
  "tests/test_auto_cleaner_complete.py::test_cleanup_project",
  "tests/test_auto_cleaner_unit.py::TestAutoCleaner::test_calculate_file_hash",
  "tests/test_auto_cleaner_unit.py::TestAutoCleaner::test_clean_backup_files",
  "tests/test_auto_cleaner_unit.py::TestAutoCleaner::test_clean_cache_files",
  "tests/test_auto_cleaner_unit.py::TestAutoCleaner::test_clean_duplicate_files",
  "tests/test_auto_cleaner_unit.py::TestAutoCleaner::test_clean_empty_directories",
  "tests/test_auto_cleaner_unit.py::TestAutoCleaner::test_clean_project_dry_run",
  "tests/test_auto_cleaner_unit.py::TestAutoCleaner::test_clean_system_files",
  "tests/test_auto_cleaner_unit.py::TestAutoCleaner::test_clean_temp_files",
  "tests/test_auto_cleaner_unit.py::TestAutoCleaner::test_constructor",
  "tests/test_auto_cleaner_unit.py::TestAutoCleaner::test_generate_cleanup_report",
  "tests/test_auto_cleaner_unit.py::TestAutoCleaner::test_is_code_file",
  "tests/test_auto_cleaner_unit.py::TestAutoCleaner::test_is_empty_directory",
  "tests/test_auto_cleaner_unit.py::TestAutoCleaner::test_is_important_file",
  "tests/test_auto_cleaner_unit.py::TestAutoCleaner::test_optimize_project_structure",
  "tests/test_auto_correction_advanced_complete.py::TestAutoCorrectionAvancee::test_ameliorer_lisibilite",
  "tests/test_auto_correction_advanced_complete.py::TestAutoCorrectionAvancee::test_analyser_et_corriger_dry_run",
  "tests/test_auto_correction_advanced_complete.py::TestAutoCorrectionAvancee::test_analyser_et_corriger_real_run",
  "tests/test_auto_correction_advanced_complete.py::TestAutoCorrectionAvancee::test_corriger_anti_patterns",
  "tests/test_auto_correction_advanced_complete.py::TestAutoCorrectionAvancee::test_corriger_erreur_syntaxe",
  "tests/test_auto_correction_advanced_complete.py::TestAutoCorrectionAvancee::test_corriger_guillemets",
  "tests/test_auto_correction_advanced_complete.py::TestAutoCorrectionAvancee::test_corriger_indentation",
  "tests/test_auto_correction_advanced_complete.py::TestAutoCorrectionAvancee::test_corriger_parentheses",
  "tests/test_auto_correction_advanced_complete.py::TestAutoCorrectionAvancee::test_corriger_syntaxe_avancee",
  "tests/test_auto_correction_advanced_complete.py::TestAutoCorrectionAvancee::test_corriger_virgules",
  "tests/test_auto_correction_advanced_complete.py::TestAutoCorrectionAvancee::test_extraire_methodes",
  "tests/test_auto_correction_advanced_complete.py::TestAutoCorrectionAvancee::test_generer_rapport",
  "tests/test_auto_correction_advanced_complete.py::TestAutoCorrectionAvancee::test_initialization",
  "tests/test_auto_correction_advanced_complete.py::TestAutoCorrectionAvancee::test_optimiser_boucles",
  "tests/test_auto_correction_advanced_complete.py::TestAutoCorrectionAvancee::test_optimiser_code",
  "tests/test_auto_correction_advanced_complete.py::TestAutoCorrectionAvancee::test_optimiser_imports",
  "tests/test_auto_correction_advanced_complete.py::TestAutoCorrectionAvancee::test_optimiser_list_comprehensions",
  "tests/test_auto_correction_advanced_complete.py::TestAutoCorrectionAvancee::test_refactoring_automatique",
  "tests/test_auto_correction_advanced_complete.py::TestAutoCorrectionAvancee::test_renommer_variables",
  "tests/test_auto_correction_advanced_complete.py::TestAutoCorrectionAvancee::test_simplifier_conditions",
  "tests/test_auto_correction_advanced_complete.py::TestAutoCorrectionAvanceeIntegration::test_integration_complete_workflow",
  "tests/test_auto_correction_advanced_complete.py::TestAutoCorrectionAvanceeIntegration::test_integration_with_empty_project",
  "tests/test_auto_correction_advanced_complete.py::TestAutoCorrectionAvanceeIntegration::test_integration_with_large_project",
  "tests/test_auto_correction_avancee.py::TestAutoCorrectionAdvanced::test_advanced_modules_structure",
  "tests/test_auto_correction_avancee.py::TestAutoCorrectionAdvanced::test_import_auto_correction",
  "tests/test_auto_correction_avancee.py::TestAutoCorrectionAdvanced::test_import_dashboard_unified",
  "tests/test_auto_correction_avancee.py::TestAutoCorrectionAdvanced::test_import_user_profiles",
  "tests/test_auto_documenter_complete.py::TestAutoDocumenter::test_analyze_python_files",
  "tests/test_auto_documenter_complete.py::TestAutoDocumenter::test_calculate_documentation_coverage",
  "tests/test_auto_documenter_complete.py::TestAutoDocumenter::test_error_handling_file_not_found",
  "tests/test_auto_documenter_complete.py::TestAutoDocumenter::test_error_handling_invalid_yaml",
  "tests/test_auto_documenter_complete.py::TestAutoDocumenter::test_extract_docstrings",
  "tests/test_auto_documenter_complete.py::TestAutoDocumenter::test_generate_api_documentation",
  "tests/test_auto_documenter_complete.py::TestAutoDocumenter::test_generate_changelog",
  "tests/test_auto_documenter_complete.py::TestAutoDocumenter::test_generate_class_documentation",
  "tests/test_auto_documenter_complete.py::TestAutoDocumenter::test_generate_contributing_guide",
  "tests/test_auto_documenter_complete.py::TestAutoDocumenter::test_generate_documentation_index",
  "tests/test_auto_documenter_complete.py::TestAutoDocumenter::test_generate_documentation_report",
  "tests/test_auto_documenter_complete.py::TestAutoDocumenter::test_generate_function_documentation",
  "tests/test_auto_documenter_complete.py::TestAutoDocumenter::test_generate_installation_guide",
  "tests/test_auto_documenter_complete.py::TestAutoDocumenter::test_generate_license_file",
  "tests/test_auto_documenter_complete.py::TestAutoDocumenter::test_generate_readme",
  "tests/test_auto_documenter_complete.py::TestAutoDocumenter::test_generate_usage_examples",
  "tests/test_auto_documenter_complete.py::TestAutoDocumenter::test_init_with_project_path",
  "tests/test_auto_documenter_complete.py::TestAutoDocumenter::test_integration_full_documentation_workflow",
  "tests/test_auto_documenter_complete.py::TestAutoDocumenter::test_load_documentation_config",
  "tests/test_auto_documenter_complete.py::TestAutoDocumenter::test_load_documentation_config_default",
  "tests/test_auto_documenter_complete.py::TestAutoDocumenter::test_load_documentation_history",
  "tests/test_auto_documenter_complete.py::TestAutoDocumenter::test_perform_full_documentation",
  "tests/test_auto_documenter_complete.py::TestAutoDocumenter::test_save_documentation_history",
  "tests/test_auto_documenter_complete.py::TestAutoDocumenter::test_scan_project_structure",
  "tests/test_auto_documenter_complete.py::TestAutoDocumenter::test_validate_documentation",
  "tests/test_auto_documenter_complete.py::TestAutoDocumenterIntegration::test_documentation_with_custom_config",
  "tests/test_auto_documenter_complete.py::TestAutoDocumenterIntegration::test_full_documentation_workflow",
  "tests/test_auto_documenter_complete.py::test_analyze_documentation_needs",
  "tests/test_auto_documenter_complete.py::test_generate_documentation",
  "tests/test_auto_documenter_unit.py::TestAutoDocumenter::test_constructor",
  "tests/test_auto_documenter_unit.py::TestAutoDocumenter::test_document_project",
  "tests/test_auto_documenter_unit.py::TestAutoDocumenter::test_generate_api_documentation",
  "tests/test_auto_documenter_unit.py::TestAutoDocumenter::test_generate_readme",
  "tests/test_auto_documenter_unit.py::TestAutoDocumenter::test_generate_setup_guide",
  "tests/test_auto_documenter_unit.py::TestAutoDocumenter::test_generate_usage_guide",
  "tests/test_auto_documenter_unit.py::TestAutoDocumenter::test_get_created_files",
  "tests/test_auto_documenter_unit.py::TestAutoDocumenter::test_load_translations",
  "tests/test_auto_tester_unit.py::TestAutoTester::test_analyze_modules",
  "tests/test_auto_tester_unit.py::TestAutoTester::test_constructor",
  "tests/test_auto_tester_unit.py::TestAutoTester::test_generate_integration_tests",
  "tests/test_auto_tester_unit.py::TestAutoTester::test_generate_performance_tests",
  "tests/test_auto_tester_unit.py::TestAutoTester::test_generate_test_report",
  "tests/test_auto_tester_unit.py::TestAutoTester::test_generate_tests",
  "tests/test_auto_tester_unit.py::TestAutoTester::test_generate_unit_tests",
  "tests/test_autocomplete_server.py::test_autocomplete_empty_prompt",
  "tests/test_autocomplete_server.py::test_autocomplete_nominal",
  "tests/test_autocomplete_server.py::test_ollama_autocomplete_engine",
  "tests/test_benchmark_critical.py::test_critical_function_benchmark[athalia_core.advanced_analytics-AdvancedAnalytics-True]",
  "tests/test_benchmark_critical.py::test_critical_function_benchmark[athalia_core.athalia_orchestrator-AthaliaOrchestrator-False]",
  "tests/test_benchmark_critical.py::test_critical_function_benchmark[athalia_core.auto_tester-AutoTester-False]",
  "tests/test_benchmark_critical.py::test_global_coverage_threshold",
  "tests/test_cache_simple.py::TestCacheSimple::test_cache_basic",
  "tests/test_cache_simple.py::TestCacheSimple::test_cache_decorator",
  "tests/test_cache_simple.py::TestCacheSimple::test_cache_miss",
  "tests/test_cache_simple.py::TestCacheSimple::test_performance_improvement",
  "tests/test_ci_robust.py::TestCIRobust::test_assertion_functionality",
  "tests/test_ci_robust.py::TestCIRobust::test_ci_workflow_validation",
  "tests/test_ci_robust.py::TestCIRobust::test_config_files_complete",
  "tests/test_ci_robust.py::TestCIRobust::test_encoding_validation",
  "tests/test_ci_robust.py::TestCIRobust::test_environment_robustness",
  "tests/test_ci_robust.py::TestCIRobust::test_error_handling",
  "tests/test_ci_robust.py::TestCIRobust::test_file_permissions_complete",
  "tests/test_ci_robust.py::TestCIRobust::test_json_yaml_parsing",
  "tests/test_ci_robust.py::TestCIRobust::test_pathlib_functionality",
  "tests/test_ci_robust.py::TestCIRobust::test_project_structure_complete",
  "tests/test_ci_robust.py::TestCIRobust::test_python_environment",
  "tests/test_ci_robust.py::TestCIRobust::test_requirements_validation",
  "tests/test_ci_robust.py::TestCIRobust::test_subprocess_functionality",
  "tests/test_ci_robust.py::TestCIRobust::test_test_suite_structure",
  "tests/test_ci_robust.py::TestCIRobust::test_time_functionality",
  "tests/test_ci_ultra_fast.py::TestCIUltraFast::test_ci_workflow_exists",
  "tests/test_ci_ultra_fast.py::TestCIUltraFast::test_config_validity",
  "tests/test_ci_ultra_fast.py::TestCIUltraFast::test_essential_files",
  "tests/test_ci_ultra_fast.py::TestCIUltraFast::test_imports_basic",
  "tests/test_ci_ultra_fast.py::TestCIUltraFast::test_no_critical_errors",
  "tests/test_ci_ultra_fast.py::TestCIUltraFast::test_project_ready",
  "tests/test_ci_ultra_fast.py::TestCIUltraFast::test_project_structure",
  "tests/test_ci_ultra_fast.py::TestCIUltraFast::test_python_syntax_basic",
  "tests/test_ci_ultra_fast.py::TestCIUltraFast::test_requirements_format",
  "tests/test_cleanup.py::test_clean_old_tests_and_caches",
  "tests/test_cleanup.py::test_cleanup_module_import",
  "tests/test_cli_complete.py::TestCLIComplete::test_ai_status_command_exception",
  "tests/test_cli_complete.py::TestCLIComplete::test_ai_status_command_import_error",
  "tests/test_cli_complete.py::TestCLIComplete::test_ai_status_command_success",
  "tests/test_cli_complete.py::TestCLIComplete::test_audit_command_exception",
  "tests/test_cli_complete.py::TestCLIComplete::test_audit_command_report_creation",
  "tests/test_cli_complete.py::TestCLIComplete::test_audit_command_success",
  "tests/test_cli_complete.py::TestCLIComplete::test_cli_group_creation",
  "tests/test_cli_complete.py::TestCLIComplete::test_cli_help_output",
  "tests/test_cli_complete.py::TestCLIComplete::test_cli_verbose_option",
  "tests/test_cli_complete.py::TestCLIComplete::test_generate_command_default_output",
  "tests/test_cli_complete.py::TestCLIComplete::test_generate_command_dry_run",
  "tests/test_cli_complete.py::TestCLIComplete::test_generate_command_exception",
  "tests/test_cli_complete.py::TestCLIComplete::test_generate_command_no_blueprint",
  "tests/test_cli_complete.py::TestCLIComplete::test_generate_command_output_directory_creation",
  "tests/test_cli_complete.py::TestCLIComplete::test_generate_command_success",
  "tests/test_cli_complete.py::TestCLIComplete::test_test_ai_command_documentation_parameters",
  "tests/test_cli_complete.py::TestCLIComplete::test_test_ai_command_exception",
  "tests/test_cli_complete.py::TestCLIComplete::test_test_ai_command_import_error",
  "tests/test_cli_complete.py::TestCLIComplete::test_test_ai_command_review_code_parameters",
  "tests/test_cli_complete.py::TestCLIComplete::test_test_ai_command_success",
  "tests/test_cli_complete.py::TestCLIIntegration::test_cli_error_handling_robustness",
  "tests/test_cli_complete.py::TestCLIIntegration::test_cli_workflow_complete",
  "tests/test_code_genetics.py::TestCodeGenetics::test_crossover",
  "tests/test_code_genetics.py::TestCodeGenetics::test_empty",
  "tests/test_code_genetics.py::TestCodeGenetics::test_evolve",
  "tests/test_code_genetics.py::TestCodeGenetics::test_mutate",
  "tests/test_code_genetics.py::TestCodeGenetics::test_select",
  "tests/test_code_linter_complete.py::TestCodeLinter::test_auto_fix_flag",
  "tests/test_code_linter_complete.py::TestCodeLinter::test_calculate_score",
  "tests/test_code_linter_complete.py::TestCodeLinter::test_calculate_score_no_issues",
  "tests/test_code_linter_complete.py::TestCodeLinter::test_empty_output_handling",
  "tests/test_code_linter_complete.py::TestCodeLinter::test_error_accumulation",
  "tests/test_code_linter_complete.py::TestCodeLinter::test_init_with_auto_fix",
  "tests/test_code_linter_complete.py::TestCodeLinter::test_init_with_project_path",
  "tests/test_code_linter_complete.py::TestCodeLinter::test_integration_with_real_project",
  "tests/test_code_linter_complete.py::TestCodeLinter::test_logging_integration",
  "tests/test_code_linter_complete.py::TestCodeLinter::test_multiple_tool_execution",
  "tests/test_code_linter_complete.py::TestCodeLinter::test_newline_handling_in_output",
  "tests/test_code_linter_complete.py::TestCodeLinter::test_path_operations",
  "tests/test_code_linter_complete.py::TestCodeLinter::test_print_report",
  "tests/test_code_linter_complete.py::TestCodeLinter::test_project_path_validation",
  "tests/test_code_linter_complete.py::TestCodeLinter::test_report_structure",
  "tests/test_code_linter_complete.py::TestCodeLinter::test_return_value_structure",
  "tests/test_code_linter_complete.py::TestCodeLinter::test_run_bandit_success",
  "tests/test_code_linter_complete.py::TestCodeLinter::test_run_bandit_with_issues",
  "tests/test_code_linter_complete.py::TestCodeLinter::test_run_black_success",
  "tests/test_code_linter_complete.py::TestCodeLinter::test_run_black_with_issues",
  "tests/test_code_linter_complete.py::TestCodeLinter::test_run_complete_workflow",
  "tests/test_code_linter_complete.py::TestCodeLinter::test_run_flake8_success",
  "tests/test_code_linter_complete.py::TestCodeLinter::test_run_flake8_with_errors",
  "tests/test_code_linter_complete.py::TestCodeLinter::test_run_isort_success",
  "tests/test_code_linter_complete.py::TestCodeLinter::test_run_isort_with_issues",
  "tests/test_code_linter_complete.py::TestCodeLinter::test_run_mypy_success",
  "tests/test_code_linter_complete.py::TestCodeLinter::test_run_mypy_with_issues",
  "tests/test_code_linter_complete.py::TestCodeLinter::test_run_returns_dict",
  "tests/test_code_linter_complete.py::TestCodeLinter::test_score_calculation_edge_cases",
  "tests/test_code_linter_complete.py::TestCodeLinter::test_score_calculation_with_many_issues",
  "tests/test_code_linter_complete.py::TestCodeLinter::test_subprocess_exception_handling",
  "tests/test_code_linter_complete.py::TestCodeLinter::test_subprocess_timeout_handling",
  "tests/test_code_linter_complete.py::TestCodeLinter::test_warning_accumulation",
  "tests/test_continue_models.py::test_models_presence",
  "tests/test_correction.py::test_audit",
  "tests/test_correction.py::test_correction",
  "tests/test_correction.py::test_generation_improvement",
  "tests/test_correction_optimizer_complete.py::TestCorrectionOptimizer::test_analyze_code_complexity",
  "tests/test_correction_optimizer_complete.py::TestCorrectionOptimizer::test_analyze_code_duplication",
  "tests/test_correction_optimizer_complete.py::TestCorrectionOptimizer::test_analyze_dependencies",
  "tests/test_correction_optimizer_complete.py::TestCorrectionOptimizer::test_analyze_security_issues",
  "tests/test_correction_optimizer_complete.py::TestCorrectionOptimizer::test_apply_automatic_fixes",
  "tests/test_correction_optimizer_complete.py::TestCorrectionOptimizer::test_apply_corrections",
  "tests/test_correction_optimizer_complete.py::TestCorrectionOptimizer::test_compare_versions",
  "tests/test_correction_optimizer_complete.py::TestCorrectionOptimizer::test_create_test_suite",
  "tests/test_correction_optimizer_complete.py::TestCorrectionOptimizer::test_estimate_effort",
  "tests/test_correction_optimizer_complete.py::TestCorrectionOptimizer::test_extract_metrics",
  "tests/test_correction_optimizer_complete.py::TestCorrectionOptimizer::test_generate_code_review_checklist",
  "tests/test_correction_optimizer_complete.py::TestCorrectionOptimizer::test_generate_corrections",
  "tests/test_correction_optimizer_complete.py::TestCorrectionOptimizer::test_generate_documentation",
  "tests/test_correction_optimizer_complete.py::TestCorrectionOptimizer::test_generate_migration_plan",
  "tests/test_correction_optimizer_complete.py::TestCorrectionOptimizer::test_generate_optimization_metrics",
  "tests/test_correction_optimizer_complete.py::TestCorrectionOptimizer::test_generate_optimization_plan",
  "tests/test_correction_optimizer_complete.py::TestCorrectionOptimizer::test_generate_performance_profile",
  "tests/test_correction_optimizer_complete.py::TestCorrectionOptimizer::test_generate_refactoring_suggestions",
  "tests/test_correction_optimizer_complete.py::TestCorrectionOptimizer::test_generate_report",
  "tests/test_correction_optimizer_complete.py::TestCorrectionOptimizer::test_get_correction_stats",
  "tests/test_correction_optimizer_complete.py::TestCorrectionOptimizer::test_identify_bottlenecks",
  "tests/test_correction_optimizer_complete.py::TestCorrectionOptimizer::test_init_with_project_path",
  "tests/test_correction_optimizer_complete.py::TestCorrectionOptimizer::test_init_without_project_path",
  "tests/test_correction_optimizer_complete.py::TestCorrectionOptimizer::test_load_report",
  "tests/test_correction_optimizer_complete.py::TestCorrectionOptimizer::test_optimize_algorithm_efficiency",
  "tests/test_correction_optimizer_complete.py::TestCorrectionOptimizer::test_optimize_correction",
  "tests/test_correction_optimizer_complete.py::TestCorrectionOptimizer::test_optimize_correction_with_syntax_error",
  "tests/test_correction_optimizer_complete.py::TestCorrectionOptimizer::test_optimize_imports",
  "tests/test_correction_optimizer_complete.py::TestCorrectionOptimizer::test_optimize_memory_usage",
  "tests/test_correction_optimizer_complete.py::TestCorrectionOptimizer::test_optimize_performance",
  "tests/test_correction_optimizer_complete.py::TestCorrectionOptimizer::test_save_report",
  "tests/test_correction_optimizer_complete.py::TestCorrectionOptimizer::test_validate_code_standards",
  "tests/test_correction_optimizer_complete.py::TestCorrectionOptimizer::test_validate_corrections",
  "tests/test_correction_optimizer_complete.py::TestCorrectionOptimizer::test_validate_improvements",
  "tests/test_correction_optimizer_complete.py::TestCorrectionOptimizer::test_validate_naming_conventions",
  "tests/test_correction_optimizer_complete.py::TestCorrectionOptimizer::test_validate_syntax",
  "tests/test_correction_optimizer_complete.py::TestCorrectionOptimizer::test_validate_test_coverage",
  "tests/test_correction_optimizer_complete.py::TestCorrectionOptimizerIntegration::test_error_handling",
  "tests/test_correction_optimizer_complete.py::TestCorrectionOptimizerIntegration::test_full_optimization_workflow",
  "tests/test_coverage_threshold.py::TestCoverageThreshold::test_core_modules_coverage",
  "tests/test_coverage_threshold.py::TestCoverageThreshold::test_coverage_configuration",
  "tests/test_coverage_threshold.py::TestCoverageThreshold::test_coverage_file_exists",
  "tests/test_coverage_threshold.py::TestCoverageThreshold::test_coverage_quality_metrics",
  "tests/test_coverage_threshold.py::TestCoverageThreshold::test_coverage_report_readable",
  "tests/test_coverage_threshold.py::TestCoverageThreshold::test_minimum_coverage_threshold",
  "tests/test_coverage_threshold.py::TestCoverageThreshold::test_no_untested_critical_modules",
  "tests/test_coverage_threshold.py::TestCoverageThreshold::test_test_coverage_structure",
  "tests/test_coverage_threshold.py::TestCoverageThreshold::test_test_execution_coverage",
  "tests/test_coverage_threshold.py::TestCoverageThreshold::test_test_files_exist",
  "tests/test_dashboard_complete.py::TestDashboard::test_error_handling_config_not_found",
  "tests/test_dashboard_complete.py::TestDashboard::test_error_handling_invalid_yaml",
  "tests/test_dashboard_complete.py::TestDashboard::test_generate_alerts_widget",
  "tests/test_dashboard_complete.py::TestDashboard::test_generate_charts_widget",
  "tests/test_dashboard_complete.py::TestDashboard::test_generate_dashboard_css",
  "tests/test_dashboard_complete.py::TestDashboard::test_generate_dashboard_html",
  "tests/test_dashboard_complete.py::TestDashboard::test_generate_dashboard_js",
  "tests/test_dashboard_complete.py::TestDashboard::test_generate_dashboard_layout",
  "tests/test_dashboard_complete.py::TestDashboard::test_generate_dashboard_report",
  "tests/test_dashboard_complete.py::TestDashboard::test_generate_dependency_widget",
  "tests/test_dashboard_complete.py::TestDashboard::test_generate_documentation_widget",
  "tests/test_dashboard_complete.py::TestDashboard::test_generate_git_widget",
  "tests/test_dashboard_complete.py::TestDashboard::test_generate_metrics_widget",
  "tests/test_dashboard_complete.py::TestDashboard::test_generate_performance_widget",
  "tests/test_dashboard_complete.py::TestDashboard::test_generate_security_widget",
  "tests/test_dashboard_complete.py::TestDashboard::test_generate_test_coverage_widget",
  "tests/test_dashboard_complete.py::TestDashboard::test_init_with_project_path",
  "tests/test_dashboard_complete.py::TestDashboard::test_integration_full_dashboard",
  "tests/test_dashboard_complete.py::TestDashboard::test_load_dashboard_config",
  "tests/test_dashboard_complete.py::TestDashboard::test_load_dashboard_config_default",
  "tests/test_dashboard_complete.py::TestDashboard::test_save_dashboard_html",
  "tests/test_dashboard_complete.py::TestDashboardIntegration::test_dashboard_with_custom_config",
  "tests/test_dashboard_complete.py::TestDashboardIntegration::test_full_dashboard_workflow",
  "tests/test_dashboard_complete.py::test_create_dashboard_report",
  "tests/test_dashboard_complete.py::test_generate_dashboard_html",
  "tests/test_encoding_utf8.py::TestEncodingUTF8::test_config_utf8",
  "tests/test_encoding_utf8.py::TestEncodingUTF8::test_consistent_line_endings",
  "tests/test_encoding_utf8.py::TestEncodingUTF8::test_markdown_files_utf8",
  "tests/test_encoding_utf8.py::TestEncodingUTF8::test_no_bom_marker",
  "tests/test_encoding_utf8.py::TestEncodingUTF8::test_python_files_utf8",
  "tests/test_encoding_utf8.py::TestEncodingUTF8::test_requirements_utf8",
  "tests/test_encoding_utf8.py::TestEncodingUTF8::test_txt_files_utf8",
  "tests/test_encoding_utf8.py::TestEncodingUTF8::test_yaml_files_utf8",
  "tests/test_error_handling.py::TestAthaliaError::test_athalia_error_creation",
  "tests/test_error_handling.py::TestAthaliaError::test_athalia_error_to_dict",
  "tests/test_error_handling.py::TestErrorCodes::test_error_code_enum",
  "tests/test_error_handling.py::TestErrorCodes::test_error_severity_enum",
  "tests/test_error_handling.py::TestErrorCodes::test_format_error_message",
  "tests/test_error_handling.py::TestErrorCodes::test_get_error_description",
  "tests/test_error_handling.py::TestErrorCodes::test_get_error_severity",
  "tests/test_error_handling.py::TestErrorContext::test_error_context_no_error",
  "tests/test_error_handling.py::TestErrorContext::test_error_context_with_athalia_error",
  "tests/test_error_handling.py::TestErrorContext::test_error_context_with_error",
  "tests/test_error_handling.py::TestErrorDecorators::test_error_handler_decorator",
  "tests/test_error_handling.py::TestErrorDecorators::test_error_handler_decorator_no_error",
  "tests/test_error_handling.py::TestErrorHandler::test_clear_errors",
  "tests/test_error_handling.py::TestErrorHandler::test_error_handler_initialization",
  "tests/test_error_handling.py::TestErrorHandler::test_error_summary",
  "tests/test_error_handling.py::TestErrorHandler::test_handle_athalia_error",
  "tests/test_error_handling.py::TestErrorHandler::test_handle_critical_error",
  "tests/test_error_handling.py::TestErrorHandler::test_handle_python_exception",
  "tests/test_error_handling.py::TestErrorHandlerGlobal::test_get_error_handler",
  "tests/test_error_handling.py::TestErrorHandlerGlobal::test_handle_error_global",
  "tests/test_error_handling.py::TestErrorHandlerGlobal::test_raise_athalia_error",
  "tests/test_generation.py::test_backup_file",
  "tests/test_generation.py::test_generate_project_dry_run",
  "tests/test_generation.py::test_merge_or_suffix_file",
  "tests/test_generation.py::test_merge_or_suffix_file_types",
  "tests/test_generation.py::test_save_and_inject",
  "tests/test_generation.py::test_scan_existing_project",
  "tests/test_hardcoded_paths.py::TestHardcodedPaths::test_no_absolute_paths",
  "tests/test_hardcoded_paths.py::TestHardcodedPaths::test_no_absolute_paths_in_source",
  "tests/test_hardcoded_paths.py::TestHardcodedPaths::test_no_desktop_paths",
  "tests/test_i18n.py::test_english_translations",
  "tests/test_i18n.py::test_french_translations",
  "tests/test_i18n.py::test_i18n_module_import",
  "tests/test_i18n.py::test_translation_consistency",
  "tests/test_imports_all.py::TestImportsAll::test_agents_import",
  "tests/test_imports_all.py::TestImportsAll::test_all_python_files_importable",
  "tests/test_imports_all.py::TestImportsAll::test_classification_modules_import",
  "tests/test_imports_all.py::TestImportsAll::test_core_modules_import",
  "tests/test_imports_all.py::TestImportsAll::test_distillation_modules_import",
  "tests/test_imports_all.py::TestImportsAll::test_i18n_modules_import",
  "tests/test_imports_all.py::TestImportsAll::test_modules_import",
  "tests/test_imports_all.py::TestImportsAll::test_no_circular_imports",
  "tests/test_imports_all.py::TestImportsAll::test_plugins_modules_import",
  "tests/test_imports_all.py::TestImportsAll::test_templates_import",
  "tests/test_imports_all.py::TestImportsAll::test_third_party_imports",
  "tests/test_intelligent_memory.py::TestIntelligentMemory::test_analyze_code_pattern",
  "tests/test_intelligent_memory.py::TestIntelligentMemory::test_calculate_code_similarity",
  "tests/test_intelligent_memory.py::TestIntelligentMemory::test_check_antipatterns",
  "tests/test_intelligent_memory.py::TestIntelligentMemory::test_check_potential_duplicates",
  "tests/test_intelligent_memory.py::TestIntelligentMemory::test_correction_suggestion_dataclass",
  "tests/test_intelligent_memory.py::TestIntelligentMemory::test_find_similar_patterns",
  "tests/test_intelligent_memory.py::TestIntelligentMemory::test_get_learning_insights",
  "tests/test_intelligent_memory.py::TestIntelligentMemory::test_init_database",
  "tests/test_intelligent_memory.py::TestIntelligentMemory::test_integration_workflow",
  "tests/test_intelligent_memory.py::TestIntelligentMemory::test_learn_from_correction",
  "tests/test_intelligent_memory.py::TestIntelligentMemory::test_learn_from_duplicate",
  "tests/test_intelligent_memory.py::TestIntelligentMemory::test_learn_from_error",
  "tests/test_intelligent_memory.py::TestIntelligentMemory::test_learning_event_dataclass",
  "tests/test_intelligent_memory.py::TestIntelligentMemory::test_normalize_code",
  "tests/test_intelligent_memory.py::TestIntelligentMemory::test_predict_issues",
  "tests/test_intelligent_memory.py::TestIntelligentMemory::test_prediction_dataclass",
  "tests/test_intelligent_memory.py::TestIntelligentMemory::test_record_learning_event",
  "tests/test_intelligent_memory.py::TestIntelligentMemory::test_save_correction_suggestion",
  "tests/test_intelligent_memory.py::TestIntelligentMemory::test_suggest_corrections",
  "tests/test_lint_flake8.py::test_flake8_clean",
  "tests/test_multi_file_editor.py::test_apply_corrections_and_rollback",
  "tests/test_multi_file_editor.py::test_apply_corrections_error",
  "tests/test_multimodal_distiller.py::TestMultimodalDistiller::test_distill",
  "tests/test_multimodal_distiller.py::TestMultimodalDistiller::test_empty",
  "tests/test_no_polluting_files.py::TestNoPollutingFiles::test_no_archive_files",
  "tests/test_no_polluting_files.py::TestNoPollutingFiles::test_no_corrupted_files",
  "tests/test_no_polluting_files.py::TestNoPollutingFiles::test_no_duplicate_files",
  "tests/test_no_polluting_files.py::TestNoPollutingFiles::test_no_editor_files",
  "tests/test_no_polluting_files.py::TestNoPollutingFiles::test_no_empty_directories",
  "tests/test_no_polluting_files.py::TestNoPollutingFiles::test_no_large_files",
  "tests/test_no_polluting_files.py::TestNoPollutingFiles::test_no_macos_hidden_files",
  "tests/test_no_polluting_files.py::TestNoPollutingFiles::test_no_python_cache_files",
  "tests/test_no_polluting_files.py::TestNoPollutingFiles::test_no_secret_files",
  "tests/test_no_polluting_files.py::TestNoPollutingFiles::test_no_temp_files",
  "tests/test_onboarding.py::test_onboarding",
  "tests/test_performance_optimization.py::TestPerformanceOptimization::test_bottleneck_detection",
  "tests/test_performance_optimization.py::TestPerformanceOptimization::test_cache_manager_initialization",
  "tests/test_performance_optimization.py::TestPerformanceOptimization::test_cache_operations",
  "tests/test_performance_optimization.py::TestPerformanceOptimization::test_cache_performance",
  "tests/test_performance_optimization.py::TestPerformanceOptimization::test_execution_time_measurement",
  "tests/test_performance_optimization.py::TestPerformanceOptimization::test_memory_leak_detection",
  "tests/test_performance_optimization.py::TestPerformanceOptimization::test_memory_usage_analysis",
  "tests/test_performance_optimization.py::TestPerformanceOptimization::test_optimization_application",
  "tests/test_performance_optimization.py::TestPerformanceOptimization::test_optimization_impact_measurement",
  "tests/test_performance_optimization.py::TestPerformanceOptimization::test_performance_analysis_basic",
  "tests/test_performance_optimization.py::TestPerformanceOptimization::test_performance_analyzer_initialization",
  "tests/test_performance_optimization.py::TestPerformanceOptimization::test_performance_optimization_suggestions",
  "tests/test_performance_optimization.py::TestPerformanceOptimization::test_performance_regression_detection",
  "tests/test_performance_optimization.py::TestPerformanceOptimization::test_performance_report_generation",
  "tests/test_performance_optimization.py::TestPerformanceOptimization::test_performance_thresholds",
  "tests/test_performance_optimization.py::test_performance_analyzer_integration",
  "tests/test_performance_optimization.py::test_performance_optimization_workflow",
  "tests/test_performance_optimization.py::test_system_performance_monitoring",
  "tests/test_plugin_complet.py::test_ai_server",
  "tests/test_plugin_complet.py::test_apple_double_files",
  "tests/test_plugin_complet.py::test_package_json",
  "tests/test_plugin_complet.py::test_plugin_compilation",
  "tests/test_plugin_complet.py::test_vscode_installation",
  "tests/test_plugins.py::TestPlugins::test_export_docker_plugin",
  "tests/test_plugins.py::TestPlugins::test_list_plugins",
  "tests/test_plugins.py::TestPlugins::test_load_plugin",
  "tests/test_plugins.py::TestPlugins::test_run_all_plugins",
  "tests/test_plugins_validator.py::test_validate_plugin_fail",
  "tests/test_plugins_validator.py::test_validate_plugin_ok",
  "tests/test_plugins_validator_complete.py::TestPluginValidator::test_check_dependencies_requirements_txt",
  "tests/test_plugins_validator_complete.py::TestPluginValidator::test_check_metadata_json",
  "tests/test_plugins_validator_complete.py::TestPluginValidator::test_check_metadata_missing_required_fields",
  "tests/test_plugins_validator_complete.py::TestPluginValidator::test_check_metadata_yaml",
  "tests/test_plugins_validator_complete.py::TestPluginValidator::test_check_plugin_structure_failure",
  "tests/test_plugins_validator_complete.py::TestPluginValidator::test_check_plugin_structure_success",
  "tests/test_plugins_validator_complete.py::TestPluginValidator::test_check_python_syntax_failure",
  "tests/test_plugins_validator_complete.py::TestPluginValidator::test_check_python_syntax_success",
  "tests/test_plugins_validator_complete.py::TestPluginValidator::test_file_handling_errors",
  "tests/test_plugins_validator_complete.py::TestPluginValidator::test_generate_validation_report",
  "tests/test_plugins_validator_complete.py::TestPluginValidator::test_init_with_plugins_dir",
  "tests/test_plugins_validator_complete.py::TestPluginValidator::test_integration_with_real_plugin",
  "tests/test_plugins_validator_complete.py::TestPluginValidator::test_metadata_parsing_errors",
  "tests/test_plugins_validator_complete.py::TestPluginValidator::test_validate_all_plugins_empty_directory",
  "tests/test_plugins_validator_complete.py::TestPluginValidator::test_validate_all_plugins_with_mixed_plugins",
  "tests/test_plugins_validator_complete.py::TestPluginValidator::test_validate_all_plugins_with_valid_plugins",
  "tests/test_plugins_validator_complete.py::TestPluginValidator::test_validate_plugin_nonexistent_path",
  "tests/test_plugins_validator_complete.py::TestPluginValidator::test_validate_plugin_with_metadata",
  "tests/test_plugins_validator_complete.py::TestPluginValidator::test_validate_plugin_with_requirements",
  "tests/test_plugins_validator_complete.py::TestPluginValidator::test_validate_plugin_with_syntax_error",
  "tests/test_plugins_validator_complete.py::TestPluginValidator::test_validate_plugin_with_valid_structure",
  "tests/test_plugins_validator_complete.py::TestPluginValidator::test_validate_plugin_without_init",
  "tests/test_plugins_validator_complete.py::TestPluginValidatorIntegration::test_error_handling",
  "tests/test_plugins_validator_complete.py::TestPluginValidatorIntegration::test_full_validation_workflow",
  "tests/test_plugins_validator_complete.py::test_validate_all_plugins_function",
  "tests/test_plugins_validator_complete.py::test_validate_plugin_function",
  "tests/test_predictive_cache.py::TestPredictiveCache::test_invalidate",
  "tests/test_predictive_cache.py::TestPredictiveCache::test_pre_generate",
  "tests/test_predictive_cache.py::TestPredictiveCache::test_predict_key",
  "tests/test_predictive_cache.py::TestPredictiveCache::test_set_get",
  "tests/test_predictive_cache.py::TestPredictiveCache::test_stats",
  "tests/test_predictive_cache.py::TestPredictiveCache::test_ttl",
  "tests/test_profils_utilisateur_avances.py::TestUserProfilesAdvanced::test_import_user_profiles",
  "tests/test_profils_utilisateur_avances.py::TestUserProfilesAdvanced::test_profiles_functionality",
  "tests/test_profils_utilisateur_avances.py::TestUserProfilesAdvanced::test_profiles_structure",
  "tests/test_project_importer.py::test_project_import_concept",
  "tests/test_ready_check.py::test_check_ready_missing",
  "tests/test_ready_check.py::test_check_ready_ok",
  "tests/test_requirements_consistency.py::TestRequirementsConsistency::test_essential_dependencies",
  "tests/test_requirements_consistency.py::TestRequirementsConsistency::test_no_conflicting_versions",
  "tests/test_requirements_consistency.py::TestRequirementsConsistency::test_no_duplicate_dependencies",
  "tests/test_requirements_consistency.py::TestRequirementsConsistency::test_no_obsolete_dependencies",
  "tests/test_requirements_consistency.py::TestRequirementsConsistency::test_pyproject_toml_exists",
  "tests/test_requirements_consistency.py::TestRequirementsConsistency::test_pyproject_toml_readable",
  "tests/test_requirements_consistency.py::TestRequirementsConsistency::test_requirements_format",
  "tests/test_requirements_consistency.py::TestRequirementsConsistency::test_requirements_installable",
  "tests/test_requirements_consistency.py::TestRequirementsConsistency::test_requirements_txt_exists",
  "tests/test_requirements_consistency.py::TestRequirementsConsistency::test_requirements_txt_readable",
  "tests/test_requirements_consistency.py::TestRequirementsConsistency::test_requirements_vs_pyproject_consistency",
  "tests/test_robotics_ci_complete.py::TestRoboticsCI::test_calculate_ci_score_perfect",
  "tests/test_robotics_ci_complete.py::TestRoboticsCI::test_calculate_ci_score_with_failures",
  "tests/test_robotics_ci_complete.py::TestRoboticsCI::test_check_project_structure_missing_files",
  "tests/test_robotics_ci_complete.py::TestRoboticsCI::test_check_project_structure_ros2",
  "tests/test_robotics_ci_complete.py::TestRoboticsCI::test_check_project_structure_rust",
  "tests/test_robotics_ci_complete.py::TestRoboticsCI::test_error_handling_exception",
  "tests/test_robotics_ci_complete.py::TestRoboticsCI::test_error_handling_timeout",
  "tests/test_robotics_ci_complete.py::TestRoboticsCI::test_generate_ci_report",
  "tests/test_robotics_ci_complete.py::TestRoboticsCI::test_init_with_project_path",
  "tests/test_robotics_ci_complete.py::TestRoboticsCI::test_run_build_python_success",
  "tests/test_robotics_ci_complete.py::TestRoboticsCI::test_run_build_ros2_success",
  "tests/test_robotics_ci_complete.py::TestRoboticsCI::test_run_build_rust_failure",
  "tests/test_robotics_ci_complete.py::TestRoboticsCI::test_run_build_rust_success",
  "tests/test_robotics_ci_complete.py::TestRoboticsCI::test_run_deployment_check_with_configs",
  "tests/test_robotics_ci_complete.py::TestRoboticsCI::test_run_deployment_check_without_configs",
  "tests/test_robotics_ci_complete.py::TestRoboticsCI::test_run_full_pipeline",
  "tests/test_robotics_ci_complete.py::TestRoboticsCI::test_run_linting_python_success",
  "tests/test_robotics_ci_complete.py::TestRoboticsCI::test_run_linting_rust_success",
  "tests/test_robotics_ci_complete.py::TestRoboticsCI::test_run_security_scan_python_success",
  "tests/test_robotics_ci_complete.py::TestRoboticsCI::test_run_security_scan_rust_success",
  "tests/test_robotics_ci_complete.py::TestRoboticsCI::test_run_tests_ros2_success",
  "tests/test_robotics_ci_complete.py::TestRoboticsCI::test_run_tests_rust_success",
  "tests/test_robotics_ci_complete.py::TestRoboticsCIIntegration::test_full_ci_workflow",
  "tests/test_robotics_ci_complete.py::test_run_robotics_ci_function",
  "tests/test_robotics_docker_complete.py::TestDockerRoboticsComplete::test_create_dockerfile_template",
  "tests/test_robotics_docker_complete.py::TestDockerRoboticsComplete::test_create_reachy_compose_template",
  "tests/test_robotics_docker_complete.py::TestDockerRoboticsComplete::test_create_start_script_template",
  "tests/test_robotics_docker_complete.py::TestDockerRoboticsComplete::test_generate_docker_report",
  "tests/test_robotics_docker_complete.py::TestDockerRoboticsComplete::test_init",
  "tests/test_robotics_docker_complete.py::TestDockerRoboticsComplete::test_parse_service_config_invalid",
  "tests/test_robotics_docker_complete.py::TestDockerRoboticsComplete::test_parse_service_config_minimal",
  "tests/test_robotics_docker_complete.py::TestDockerRoboticsComplete::test_parse_service_config_valid",
  "tests/test_robotics_docker_complete.py::TestDockerRoboticsComplete::test_run_docker_compose_exception",
  "tests/test_robotics_docker_complete.py::TestDockerRoboticsComplete::test_run_docker_compose_failure",
  "tests/test_robotics_docker_complete.py::TestDockerRoboticsComplete::test_run_docker_compose_no_compose_file",
  "tests/test_robotics_docker_complete.py::TestDockerRoboticsComplete::test_run_docker_compose_success",
  "tests/test_robotics_docker_complete.py::TestDockerRoboticsComplete::test_setup_reachy_environment_exception",
  "tests/test_robotics_docker_complete.py::TestDockerRoboticsComplete::test_setup_reachy_environment_success",
  "tests/test_robotics_docker_complete.py::TestDockerRoboticsComplete::test_validate_docker_setup_no_compose",
  "tests/test_robotics_docker_complete.py::TestDockerRoboticsComplete::test_validate_docker_setup_with_invalid_compose",
  "tests/test_robotics_docker_complete.py::TestDockerRoboticsComplete::test_validate_docker_setup_with_valid_compose",
  "tests/test_robotics_docker_complete.py::TestDockerRoboticsComplete::test_validate_docker_setup_without_reachy_service",
  "tests/test_robotics_docker_complete.py::TestDockerRoboticsComplete::test_validate_reachy_service_complete",
  "tests/test_robotics_docker_complete.py::TestDockerRoboticsComplete::test_validate_reachy_service_missing_display",
  "tests/test_robotics_docker_complete.py::TestDockerRoboticsComplete::test_validate_reachy_service_missing_image",
  "tests/test_robotics_docker_complete.py::TestDockerRoboticsComplete::test_validate_reachy_service_missing_ros_domain",
  "tests/test_robotics_docker_complete.py::TestDockerRoboticsComplete::test_validate_reachy_service_missing_volumes",
  "tests/test_robotics_docker_complete.py::TestDockerRoboticsComplete::test_validate_reachy_service_wrong_image",
  "tests/test_robotics_docker_complete.py::TestDockerRoboticsComplete::test_validate_reachy_service_wrong_network_mode",
  "tests/test_robotics_docker_complete.py::TestDockerRoboticsEdgeCases::test_docker_service_config_dataclass",
  "tests/test_robotics_docker_complete.py::TestDockerRoboticsEdgeCases::test_docker_validation_result_dataclass",
  "tests/test_robotics_docker_complete.py::TestDockerRoboticsEdgeCases::test_generate_docker_report_empty_result",
  "tests/test_robotics_docker_complete.py::TestDockerRoboticsEdgeCases::test_generate_docker_report_with_issues",
  "tests/test_robotics_docker_complete.py::TestDockerRoboticsEdgeCases::test_validate_docker_setup_compose_without_services",
  "tests/test_robotics_docker_complete.py::TestDockerRoboticsEdgeCases::test_validate_docker_setup_empty_compose",
  "tests/test_robotics_docker_complete.py::TestDockerRoboticsEdgeCases::test_validate_reachy_service_environment_list",
  "tests/test_robotics_docker_complete.py::TestDockerRoboticsEdgeCases::test_validate_reachy_service_environment_mixed",
  "tests/test_robotics_docker_complete.py::TestDockerRoboticsIntegration::test_docker_service_config_parsing_real",
  "tests/test_robotics_docker_complete.py::TestDockerRoboticsIntegration::test_docker_validation_with_real_files",
  "tests/test_robotics_docker_complete.py::TestDockerRoboticsIntegration::test_full_docker_workflow",
  "tests/test_robotics_docker_complete.py::TestMainFunction::test_docker_service_config_creation",
  "tests/test_robotics_docker_complete.py::TestMainFunction::test_docker_validation_result_creation",
  "tests/test_robotics_reachy_auditor_complete.py::TestMainFunction::test_reachy_audit_result_dataclass",
  "tests/test_robotics_reachy_auditor_complete.py::TestReachyAuditorComplete::test_audit_complete_all_valid",
  "tests/test_robotics_reachy_auditor_complete.py::TestReachyAuditorComplete::test_audit_complete_docker_invalid",
  "tests/test_robotics_reachy_auditor_complete.py::TestReachyAuditorComplete::test_audit_complete_ros2_invalid",
  "tests/test_robotics_reachy_auditor_complete.py::TestReachyAuditorComplete::test_audit_docker_invalid_yaml",
  "tests/test_robotics_reachy_auditor_complete.py::TestReachyAuditorComplete::test_audit_docker_no_compose",
  "tests/test_robotics_reachy_auditor_complete.py::TestReachyAuditorComplete::test_audit_docker_no_reachy_service",
  "tests/test_robotics_reachy_auditor_complete.py::TestReachyAuditorComplete::test_audit_docker_success",
  "tests/test_robotics_reachy_auditor_complete.py::TestReachyAuditorComplete::test_audit_ros2_no_packages",
  "tests/test_robotics_reachy_auditor_complete.py::TestReachyAuditorComplete::test_audit_ros2_no_src",
  "tests/test_robotics_reachy_auditor_complete.py::TestReachyAuditorComplete::test_audit_ros2_success",
  "tests/test_robotics_reachy_auditor_complete.py::TestReachyAuditorComplete::test_audit_rust_invalid_cargo",
  "tests/test_robotics_reachy_auditor_complete.py::TestReachyAuditorComplete::test_audit_rust_no_projects",
  "tests/test_robotics_reachy_auditor_complete.py::TestReachyAuditorComplete::test_audit_rust_success",
  "tests/test_robotics_reachy_auditor_complete.py::TestReachyAuditorComplete::test_audit_structure_no_readme",
  "tests/test_robotics_reachy_auditor_complete.py::TestReachyAuditorComplete::test_audit_structure_no_tests",
  "tests/test_robotics_reachy_auditor_complete.py::TestReachyAuditorComplete::test_audit_structure_success",
  "tests/test_robotics_reachy_auditor_complete.py::TestReachyAuditorComplete::test_generate_report",
  "tests/test_robotics_reachy_auditor_complete.py::TestReachyAuditorComplete::test_init",
  "tests/test_robotics_reachy_auditor_complete.py::TestReachyAuditorComplete::test_save_report",
  "tests/test_robotics_reachy_auditor_complete.py::TestReachyAuditorComplete::test_save_report_custom_path",
  "tests/test_robotics_reachy_auditor_complete.py::TestReachyAuditorEdgeCases::test_audit_complete_empty_project",
  "tests/test_robotics_reachy_auditor_complete.py::TestReachyAuditorEdgeCases::test_audit_complete_perfect_score",
  "tests/test_robotics_reachy_auditor_complete.py::TestReachyAuditorEdgeCases::test_generate_report_empty_result",
  "tests/test_robotics_reachy_auditor_complete.py::TestReachyAuditorEdgeCases::test_save_report_permission_error",
  "tests/test_robotics_reachy_auditor_complete.py::TestReachyAuditorIntegration::test_full_reachy_audit_integration",
  "tests/test_robotics_reachy_auditor_complete.py::TestReachyAuditorIntegration::test_reachy_audit_report_integration",
  "tests/test_ros2_validator_complete.py::TestROS2Validator::test_check_dependencies_failure",
  "tests/test_ros2_validator_complete.py::TestROS2Validator::test_check_dependencies_success",
  "tests/test_ros2_validator_complete.py::TestROS2Validator::test_check_launch_files",
  "tests/test_ros2_validator_complete.py::TestROS2Validator::test_check_package_structure_missing_files",
  "tests/test_ros2_validator_complete.py::TestROS2Validator::test_check_package_structure_valid",
  "tests/test_ros2_validator_complete.py::TestROS2Validator::test_check_test_files",
  "tests/test_ros2_validator_complete.py::TestROS2Validator::test_error_handling_file_errors",
  "tests/test_ros2_validator_complete.py::TestROS2Validator::test_generate_validation_report",
  "tests/test_ros2_validator_complete.py::TestROS2Validator::test_init_with_project_path",
  "tests/test_ros2_validator_complete.py::TestROS2Validator::test_integration_with_real_package",
  "tests/test_ros2_validator_complete.py::TestROS2Validator::test_validate_cmakelists_missing_patterns",
  "tests/test_ros2_validator_complete.py::TestROS2Validator::test_validate_cmakelists_valid",
  "tests/test_ros2_validator_complete.py::TestROS2Validator::test_validate_package_complete",
  "tests/test_ros2_validator_complete.py::TestROS2Validator::test_validate_package_xml_invalid_xml",
  "tests/test_ros2_validator_complete.py::TestROS2Validator::test_validate_package_xml_missing_elements",
  "tests/test_ros2_validator_complete.py::TestROS2Validator::test_validate_package_xml_valid",
  "tests/test_ros2_validator_complete.py::TestROS2Validator::test_validate_setup_py_missing_patterns",
  "tests/test_ros2_validator_complete.py::TestROS2Validator::test_validate_setup_py_valid",
  "tests/test_ros2_validator_complete.py::TestROS2ValidatorIntegration::test_error_handling",
  "tests/test_ros2_validator_complete.py::TestROS2ValidatorIntegration::test_full_validation_workflow",
  "tests/test_ros2_validator_complete.py::test_validate_ros2_package_function",
  "tests/test_security.py::test_security_audit_project",
  "tests/test_security_auditor_complete.py::TestSecurityAuditor::test_calculate_score",
  "tests/test_security_auditor_complete.py::TestSecurityAuditor::test_calculate_score_no_issues",
  "tests/test_security_auditor_complete.py::TestSecurityAuditor::test_check_code_vulnerabilities",
  "tests/test_security_auditor_complete.py::TestSecurityAuditor::test_check_dependencies_with_bandit_failure",
  "tests/test_security_auditor_complete.py::TestSecurityAuditor::test_check_dependencies_with_bandit_success",
  "tests/test_security_auditor_complete.py::TestSecurityAuditor::test_check_encryption_with_encryption",
  "tests/test_security_auditor_complete.py::TestSecurityAuditor::test_check_encryption_without_encryption",
  "tests/test_security_auditor_complete.py::TestSecurityAuditor::test_check_permissions",
  "tests/test_security_auditor_complete.py::TestSecurityAuditor::test_check_secrets",
  "tests/test_security_auditor_complete.py::TestSecurityAuditor::test_encryption_detection",
  "tests/test_security_auditor_complete.py::TestSecurityAuditor::test_file_handling_errors",
  "tests/test_security_auditor_complete.py::TestSecurityAuditor::test_init_with_project_path",
  "tests/test_security_auditor_complete.py::TestSecurityAuditor::test_integration_with_real_project",
  "tests/test_security_auditor_complete.py::TestSecurityAuditor::test_json_parsing_errors",
  "tests/test_security_auditor_complete.py::TestSecurityAuditor::test_logging_integration",
  "tests/test_security_auditor_complete.py::TestSecurityAuditor::test_path_operations",
  "tests/test_security_auditor_complete.py::TestSecurityAuditor::test_print_report",
  "tests/test_security_auditor_complete.py::TestSecurityAuditor::test_project_path_validation",
  "tests/test_security_auditor_complete.py::TestSecurityAuditor::test_regex_pattern_matching",
  "tests/test_security_auditor_complete.py::TestSecurityAuditor::test_report_file_creation",
  "tests/test_security_auditor_complete.py::TestSecurityAuditor::test_report_file_creation_error_handling",
  "tests/test_security_auditor_complete.py::TestSecurityAuditor::test_report_structure",
  "tests/test_security_auditor_complete.py::TestSecurityAuditor::test_return_value_structure",
  "tests/test_security_auditor_complete.py::TestSecurityAuditor::test_run_complete_workflow",
  "tests/test_security_auditor_complete.py::TestSecurityAuditor::test_run_returns_dict",
  "tests/test_security_auditor_complete.py::TestSecurityAuditor::test_run_with_exception_handling",
  "tests/test_security_auditor_complete.py::TestSecurityAuditor::test_run_with_file_creation",
  "tests/test_security_auditor_complete.py::TestSecurityAuditor::test_score_calculation_edge_cases",
  "tests/test_security_auditor_complete.py::TestSecurityAuditor::test_score_calculation_with_many_vulnerabilities",
  "tests/test_security_auditor_complete.py::TestSecurityAuditor::test_secret_detection_patterns",
  "tests/test_security_auditor_complete.py::TestSecurityAuditor::test_subprocess_timeout_handling",
  "tests/test_security_auditor_complete.py::TestSecurityAuditor::test_vulnerability_detection_patterns",
  "tests/test_security_comprehensive.py::TestSecurityComprehensive::test_security_audit_project_case_insensitive",
  "tests/test_security_comprehensive.py::TestSecurityComprehensive::test_security_audit_project_clean_project",
  "tests/test_security_comprehensive.py::TestSecurityComprehensive::test_security_audit_project_complex_patterns",
  "tests/test_security_comprehensive.py::TestSecurityComprehensive::test_security_audit_project_creates_audit_file",
  "tests/test_security_comprehensive.py::TestSecurityComprehensive::test_security_audit_project_empty_directory",
  "tests/test_security_comprehensive.py::TestSecurityComprehensive::test_security_audit_project_file_read_error",
  "tests/test_security_comprehensive.py::TestSecurityComprehensive::test_security_audit_project_ignores_non_python_files",
  "tests/test_security_comprehensive.py::TestSecurityComprehensive::test_security_audit_project_multiple_issues",
  "tests/test_security_comprehensive.py::TestSecurityComprehensive::test_security_audit_project_score_calculation",
  "tests/test_security_comprehensive.py::TestSecurityComprehensive::test_security_audit_project_with_api_key",
  "tests/test_security_comprehensive.py::TestSecurityComprehensive::test_security_audit_project_with_f_files",
  "tests/test_security_comprehensive.py::TestSecurityComprehensive::test_security_audit_project_with_os_system",
  "tests/test_security_comprehensive.py::TestSecurityComprehensive::test_security_audit_project_with_password",
  "tests/test_security_comprehensive.py::TestSecurityComprehensive::test_security_audit_project_with_subdirectories",
  "tests/test_security_patterns.py::TestSecurityPatterns::test_no_debug_code",
  "tests/test_security_patterns.py::TestSecurityPatterns::test_no_eval_usage",
  "tests/test_security_patterns.py::TestSecurityPatterns::test_no_hardcoded_passwords",
  "tests/test_security_patterns.py::TestSecurityPatterns::test_no_hardcoded_urls",
  "tests/test_security_patterns.py::TestSecurityPatterns::test_no_shell_injection",
  "tests/test_security_patterns.py::TestSecurityPatterns::test_no_sql_injection_patterns",
  "tests/test_security_patterns.py::TestSecurityPatterns::test_no_weak_crypto",
  "tests/test_security_validator.py::TestSecurityFunctions::test_is_command_safe",
  "tests/test_security_validator.py::TestSecurityFunctions::test_validate_and_run_safe",
  "tests/test_security_validator.py::TestSecurityFunctions::test_validate_and_run_unsafe",
  "tests/test_security_validator.py::TestSecurityIntegration::test_command_with_arguments",
  "tests/test_security_validator.py::TestSecurityIntegration::test_multiple_commands",
  "tests/test_security_validator.py::TestSecurityValidator::test_add_allowed_command",
  "tests/test_security_validator.py::TestSecurityValidator::test_add_safe_directory",
  "tests/test_security_validator.py::TestSecurityValidator::test_allowed_commands",
  "tests/test_security_validator.py::TestSecurityValidator::test_dangerous_paths",
  "tests/test_security_validator.py::TestSecurityValidator::test_empty_command",
  "tests/test_security_validator.py::TestSecurityValidator::test_forbidden_commands",
  "tests/test_security_validator.py::TestSecurityValidator::test_forbidden_patterns",
  "tests/test_security_validator.py::TestSecurityValidator::test_remove_allowed_command",
  "tests/test_security_validator.py::TestSecurityValidator::test_safe_command_execution",
  "tests/test_security_validator.py::TestSecurityValidator::test_safe_paths",
  "tests/test_security_validator.py::TestSecurityValidator::test_security_error_exception",
  "tests/test_security_validator.py::TestSecurityValidator::test_security_report",
  "tests/test_unified_orchestrator_complete.py::TestUnifiedOrchestrator::test_error_handling_module_initialization",
  "tests/test_unified_orchestrator_complete.py::TestUnifiedOrchestrator::test_generate_workflow_report",
  "tests/test_unified_orchestrator_complete.py::TestUnifiedOrchestrator::test_init_with_project_path",
  "tests/test_unified_orchestrator_complete.py::TestUnifiedOrchestrator::test_initialize_modules_failure",
  "tests/test_unified_orchestrator_complete.py::TestUnifiedOrchestrator::test_initialize_modules_success",
  "tests/test_unified_orchestrator_complete.py::TestUnifiedOrchestrator::test_run_full_workflow_failure",
  "tests/test_unified_orchestrator_complete.py::TestUnifiedOrchestrator::test_run_full_workflow_success",
  "tests/test_unified_orchestrator_complete.py::TestUnifiedOrchestrator::test_save_workflow_results",
  "tests/test_unified_orchestrator_complete.py::TestUnifiedOrchestrator::test_step_auto_cicd_success",
  "tests/test_unified_orchestrator_complete.py::TestUnifiedOrchestrator::test_step_auto_cleaning_success",
  "tests/test_unified_orchestrator_complete.py::TestUnifiedOrchestrator::test_step_auto_documentation_success",
  "tests/test_unified_orchestrator_complete.py::TestUnifiedOrchestrator::test_step_auto_testing_success",
  "tests/test_unified_orchestrator_complete.py::TestUnifiedOrchestrator::test_step_code_linting_success",
  "tests/test_unified_orchestrator_complete.py::TestUnifiedOrchestrator::test_step_correction_optimization_success",
  "tests/test_unified_orchestrator_complete.py::TestUnifiedOrchestrator::test_step_generate_project_failure",
  "tests/test_unified_orchestrator_complete.py::TestUnifiedOrchestrator::test_step_generate_project_success",
  "tests/test_unified_orchestrator_complete.py::TestUnifiedOrchestrator::test_step_security_audit_failure",
  "tests/test_unified_orchestrator_complete.py::TestUnifiedOrchestrator::test_step_security_audit_success",
  "tests/test_unified_orchestrator_complete.py::TestUnifiedOrchestrator::test_workflow_results_structure",
  "tests/test_unified_orchestrator_complete.py::TestUnifiedOrchestratorIntegration::test_full_integration_workflow",
  "tests/test_unified_orchestrator_complete.py::test_run_unified_workflow_function",
  "tests/test_user_profiles_advanced_complete.py::TestGestionnaireProfils::test_creer_profil",
  "tests/test_user_profiles_advanced_complete.py::TestGestionnaireProfils::test_creer_profil_with_preferences",
  "tests/test_user_profiles_advanced_complete.py::TestGestionnaireProfils::test_enregistrer_action",
  "tests/test_user_profiles_advanced_complete.py::TestGestionnaireProfils::test_enregistrer_consultation_projet",
  "tests/test_user_profiles_advanced_complete.py::TestGestionnaireProfils::test_exporter_profil",
  "tests/test_user_profiles_advanced_complete.py::TestGestionnaireProfils::test_generer_rapport_profil",
  "tests/test_user_profiles_advanced_complete.py::TestGestionnaireProfils::test_importer_profil",
  "tests/test_user_profiles_advanced_complete.py::TestGestionnaireProfils::test_init_database",
  "tests/test_user_profiles_advanced_complete.py::TestGestionnaireProfils::test_initialization",
  "tests/test_user_profiles_advanced_complete.py::TestGestionnaireProfils::test_lister_profils",
  "tests/test_user_profiles_advanced_complete.py::TestGestionnaireProfils::test_mettre_a_jour_profil",
  "tests/test_user_profiles_advanced_complete.py::TestGestionnaireProfils::test_obtenir_profil",
  "tests/test_user_profiles_advanced_complete.py::TestGestionnaireProfils::test_obtenir_profil_inexistant",
  "tests/test_user_profiles_advanced_complete.py::TestGestionnaireProfils::test_obtenir_statistiques",
  "tests/test_user_profiles_advanced_complete.py::TestGestionnaireProfils::test_supprimer_profil",
  "tests/test_user_profiles_advanced_complete.py::TestGestionnaireProfils::test_supprimer_profil_inexistant",
  "tests/test_user_profiles_advanced_complete.py::TestGestionnaireProfilsIntegration::test_integration_complete_workflow",
  "tests/test_user_profiles_advanced_complete.py::TestGestionnaireProfilsIntegration::test_integration_error_handling",
  "tests/test_user_profiles_advanced_complete.py::TestGestionnaireProfilsIntegration::test_integration_with_multiple_users",
  "tests/test_user_profiles_advanced_complete.py::TestProfilUtilisateur::test_from_dict",
  "tests/test_user_profiles_advanced_complete.py::TestProfilUtilisateur::test_from_dict_with_missing_fields",
  "tests/test_user_profiles_advanced_complete.py::TestProfilUtilisateur::test_initialization",
  "tests/test_user_profiles_advanced_complete.py::TestProfilUtilisateur::test_initialization_with_preferences",
  "tests/test_user_profiles_advanced_complete.py::TestProfilUtilisateur::test_to_dict"
]