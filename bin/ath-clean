#!/bin/bash
# üåü Nettoyage Rapide du Projet Athalia - VERSION OPTIMIS√âE
# Version 4.0 - Performance maximale, interface simplifi√©e

set -euo pipefail

# =============================================================================
# SECTION 1: CONFIGURATION RAPIDE
# =============================================================================

# Couleurs simplifi√©es
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

# Variables optimis√©es
CLEANED_COUNT=0
DRY_RUN_MODE=false

# D√©tection du mode dry-run
if [ "${1:-}" = "--dry-run" ] || [ "${1:-}" = "-d" ]; then
    DRY_RUN_MODE=true
fi

# =============================================================================
# SECTION 2: FONCTIONS D'AFFICHAGE OPTIMIS√âES
# =============================================================================

print_header() {
    echo -e "${BLUE}üöÄ Nettoyage Rapide Athalia${NC}"
    echo
}

print_section() {
    echo -e "${BLUE}üìã $1${NC}"
}

print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

print_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

print_summary() {
    echo
    echo -e "${GREEN}üéØ Total nettoy√© : $CLEANED_COUNT √©l√©ments${NC}"
    echo
}

# =============================================================================
# SECTION 3: FONCTIONS DE NETTOYAGE RAPIDES
# =============================================================================

# Fonction de nettoyage rapide
fast_clean() {
    local pattern="$1"
    local description="$2"
    
    echo -e "${BLUE}üîç $description...${NC}"
    
    if [ "$DRY_RUN_MODE" = true ]; then
        local count=$(find . -path "$pattern" -not -path "./.git/*" -not -path "./.venv/*" -not -path "./venv/*" -not -path "./archive/*" 2>/dev/null | wc -l)
        echo -e "${YELLOW}   [DRY-RUN] $count fichiers trouv√©s${NC}"
        return
    fi
    
    local count=$(find . -path "$pattern" -not -path "./.git/*" -not -path "./.venv/*" -not -path "./venv/*" -not -path "./archive/*" -delete 2>/dev/null | wc -l)
    if [ $count -gt 0 ]; then
        print_success "$count √©l√©ments nettoy√©s"
        CLEANED_COUNT=$((CLEANED_COUNT + count))
    fi
}

# =============================================================================
# SECTION 4: EX√âCUTION PRINCIPALE RAPIDE
# =============================================================================

# Affichage de l'en-t√™te
print_header

# Nettoyage rapide des fichiers AppleDouble et macOS
print_section "Nettoyage des fichiers AppleDouble et macOS"
fast_clean "._*" "Fichiers AppleDouble"
fast_clean ".DS_Store" "Fichiers .DS_Store"
fast_clean ".!*" "Fichiers temporaires"
fast_clean "*.noindex" "Fichiers .noindex"

# Nettoyage rapide des fichiers Python compil√©s
print_section "Nettoyage des fichiers Python compil√©s"
fast_clean "*.pyc" "Fichiers .pyc"
fast_clean "__pycache__" "Dossiers __pycache__"

# Nettoyage rapide des caches de tests
print_section "Nettoyage des caches de tests"
fast_clean ".pytest_cache" "Cache pytest"
fast_clean ".mypy_cache" "Cache mypy"
fast_clean "htmlcov" "Rapports de couverture"

# Nettoyage rapide des fichiers de couverture
print_section "Nettoyage des fichiers de couverture"
fast_clean "*.coverage" "Fichiers de couverture"
fast_clean "coverage.xml" "Rapports XML de couverture"

# Nettoyage rapide des fichiers corrompus
print_section "Nettoyage des fichiers corrompus"
fast_clean "*.f(f)" "Fichiers corrompus"

# Nettoyage des caract√®res null des fichiers Python
print_section "Nettoyage des caract√®res null"
if [ "$DRY_RUN_MODE" = true ]; then
    echo -e "${YELLOW}   [DRY-RUN] Recherche de fichiers avec caract√®res null${NC}"
else
    find . -name "*.py" -not -path "./.git/*" -not -path "./.venv/*" -not -path "./venv/*" -not -path "./archive/*" -exec grep -l $'\x00' {} \; 2>/dev/null | while read file; do
        if [ -f "$file" ]; then
            tr -d '\000' < "$file" > "$file.tmp" 2>/dev/null && mv "$file.tmp" "$file" 2>/dev/null
            print_success "Nettoy√©: $file"
            CLEANED_COUNT=$((CLEANED_COUNT + 1))
        fi
    done
fi

# Affichage du r√©sum√©
print_summary 