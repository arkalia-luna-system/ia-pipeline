#!/bin/bash
# ath-clean-cursor-memory
# Script de nettoyage m√©moire pour Cursor
# Auteur : Athalia
# Version : 1.0

set -e

echo "üßπ Nettoyage m√©moire Cursor..."
echo "================================"

# Fonction de sauvegarde
backup_cursor_data() {
    echo "üì¶ Sauvegarde des donn√©es Cursor..."
    BACKUP_DIR="$HOME/.cursor_backup_$(date +%Y%m%d_%H%M%S)"
    mkdir -p "$BACKUP_DIR"
    
    if [ -d "$HOME/.cursor" ]; then
        cp -r "$HOME/.cursor" "$BACKUP_DIR/"
        echo "‚úÖ Sauvegarde cr√©√©e : $BACKUP_DIR"
    fi
}

# Fonction de nettoyage des processus
clean_cursor_processes() {
    echo "üîÑ Arr√™t des processus Cursor..."
    
    # Arr√™t propre des processus Cursor
    pkill -f "Cursor Helper" || true
    sleep 2
    
    # V√©rification que tous les processus sont arr√™t√©s
    if pgrep -f "Cursor" > /dev/null; then
        echo "‚ö†Ô∏è  Certains processus Cursor sont encore actifs"
        pkill -9 -f "Cursor" || true
    fi
    
    echo "‚úÖ Processus Cursor arr√™t√©s"
}

# Fonction de nettoyage du cache
clean_cursor_cache() {
    echo "üóëÔ∏è  Nettoyage du cache Cursor..."
    
    # Cache principal
    if [ -d "$HOME/Library/Caches/Cursor" ]; then
        rm -rf "$HOME/Library/Caches/Cursor"
        echo "‚úÖ Cache principal nettoy√©"
    fi
    
    # Cache Application Support
    if [ -d "$HOME/Library/Application Support/Cursor/Cache" ]; then
        rm -rf "$HOME/Library/Application Support/Cursor/Cache"
        echo "‚úÖ Cache Application Support nettoy√©"
    fi
    
    # Cache Code
    if [ -d "$HOME/Library/Application Support/Cursor/CachedData" ]; then
        rm -rf "$HOME/Library/Application Support/Cursor/CachedData"
        echo "‚úÖ Cache Code nettoy√©"
    fi
}

# Fonction de nettoyage des logs
clean_cursor_logs() {
    echo "üìù Nettoyage des logs Cursor..."
    
    if [ -d "$HOME/Library/Logs/Cursor" ]; then
        find "$HOME/Library/Logs/Cursor" -name "*.log" -delete
        echo "‚úÖ Logs nettoy√©s"
    fi
}

# Fonction de nettoyage des extensions inutilis√©es
clean_unused_extensions() {
    echo "üîå Analyse des extensions..."
    
    EXTENSIONS_DIR="$HOME/.cursor/extensions"
    if [ -d "$EXTENSIONS_DIR" ]; then
        echo "Extensions install√©es :"
        ls -la "$EXTENSIONS_DIR" | grep "^d" | wc -l
        
        # Extensions gourmandes √† surveiller
        HEAVY_EXTENSIONS=(
            "continue.continue"
            "anysphere.cursorpyright"
            "github.vscode-github-actions"
            "eamodio.gitlens"
        )
        
        echo "‚ö†Ô∏è  Extensions gourmandes d√©tect√©es :"
        for ext in "${HEAVY_EXTENSIONS[@]}"; do
            if [ -d "$EXTENSIONS_DIR/$ext"* ]; then
                echo "   - $ext"
            fi
        done
    fi
}

# Fonction de red√©marrage
restart_cursor() {
    echo "üöÄ Red√©marrage de Cursor..."
    
    # Attendre un peu avant de red√©marrer
    sleep 3
    
    # Red√©marrer Cursor
    open /Applications/Cursor.app
    
    echo "‚úÖ Cursor red√©marr√©"
}

# Fonction d'affichage des statistiques
show_memory_stats() {
    echo "üìä Statistiques m√©moire :"
    echo "=========================="
    
    # M√©moire syst√®me
    echo "M√©moire syst√®me :"
    vm_stat | head -10
    
    # Processus Cursor
    echo ""
    echo "Processus Cursor :"
    ps aux | grep -i cursor | grep -v grep | awk '{print $6/1024 " MB - " $11}' | head -5
}

# Fonction principale
main() {
    echo "üéØ D√©but du nettoyage m√©moire Cursor"
    echo "====================================="
    
    # Sauvegarde
    backup_cursor_data
    
    # Nettoyage
    clean_cursor_processes
    clean_cursor_cache
    clean_cursor_logs
    clean_unused_extensions
    
    # Statistiques avant red√©marrage
    show_memory_stats
    
    # Red√©marrage
    restart_cursor
    
    echo ""
    echo "üéâ Nettoyage termin√© avec succ√®s !"
    echo "=================================="
    echo "üí° Conseils :"
    echo "   - Surveillez l'utilisation m√©moire"
    echo "   - D√©sactivez les extensions inutilis√©es"
    echo "   - Ex√©cutez ce script r√©guli√®rement"
    echo ""
    echo "üìÅ Sauvegarde cr√©√©e : $BACKUP_DIR"
}

# Gestion des arguments
case "${1:-}" in
    --help|-h)
        echo "Usage: ath-clean-cursor-memory [OPTIONS]"
        echo ""
        echo "Options:"
        echo "  --help, -h     Afficher cette aide"
        echo "  --no-backup    Ne pas cr√©er de sauvegarde"
        echo "  --no-restart   Ne pas red√©marrer Cursor"
        echo ""
        echo "Description:"
        echo "  Nettoie la m√©moire et le cache de Cursor pour am√©liorer les performances"
        exit 0
        ;;
    --no-backup)
        echo "‚ö†Ô∏è  Mode sans sauvegarde"
        backup_cursor_data() { echo "‚è≠Ô∏è  Sauvegarde ignor√©e"; }
        ;;
    --no-restart)
        echo "‚ö†Ô∏è  Mode sans red√©marrage"
        restart_cursor() { echo "‚è≠Ô∏è  Red√©marrage ignor√©"; }
        ;;
esac

# Ex√©cution
main "$@" 