#!/bin/bash
# Script de workflow complet pour Athalia
# G√®re tout le cycle de d√©veloppement : d√©marrage ‚Üí travail ‚Üí fermeture

set -e

# Couleurs pour l'affichage
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# Configuration
PROJECT_NAME="athalia-dev-setup"
BRANCH="develop"

echo -e "${PURPLE}üîÑ Workflow Complet Athalia${NC}"
echo -e "${PURPLE}========================${NC}"
echo -e "${BLUE}üìÇ Projet: $PROJECT_NAME${NC}"
echo -e "${BLUE}üåø Branche: $BRANCH${NC}"
echo ""

# Fonction pour afficher les √©tapes
show_step() {
    echo -e "${CYAN}‚ñ∂Ô∏è  $1${NC}"
}

# Fonction pour afficher le succ√®s
show_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

# Fonction pour afficher l'erreur
show_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# Fonction pour afficher l'avertissement
show_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

# Fonction pour afficher l'info
show_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

# V√©rifier les arguments
if [ $# -eq 0 ]; then
    echo -e "${YELLOW}Usage: $0 [start|work|shutdown|full|help]${NC}"
    echo ""
    echo -e "${CYAN}Commandes disponibles:${NC}"
    echo -e "   ${GREEN}start${NC}     - D√©marrage rapide de l'environnement"
    echo -e "   ${GREEN}work${NC}      - V√©rification et pr√©paration au travail"
    echo -e "   ${GREEN}shutdown${NC}  - Fermeture propre compl√®te"
    echo -e "   ${GREEN}full${NC}      - Cycle complet (start ‚Üí work ‚Üí shutdown)"
    echo -e "   ${GREEN}help${NC}      - Afficher cette aide"
    echo ""
    echo -e "${YELLOW}üí° Exemple: $0 full${NC}"
    exit 1
fi

COMMAND=$1

case $COMMAND in
    "start")
        show_step "üöÄ D√©marrage de l'environnement Athalia"
        ./bin/ath-quick-start
        ;;

    "work")
        show_step "üíº Pr√©paration au travail"

        # V√©rifier l'√©tat Git
        show_info "V√©rification de l'√©tat Git..."
        if git status --porcelain | grep -q .; then
            show_warning "Changements d√©tect√©s"
            git status --short
            echo ""
            read -p "Voulez-vous commiter ces changements? (o/n): " -r
            if [[ $REPLY =~ ^[Oo]$ ]]; then
                git add .
                git commit -m "üíº Travail en cours - $(date '+%Y-%m-%d %H:%M:%S')"
                show_success "Changements commit√©s"
            fi
        else
            show_success "Aucun changement en attente"
        fi

        # V√©rifier les tests
        show_info "V√©rification des tests..."
        if [ -d "tests" ]; then
            TEST_COUNT=$(find tests -name "*.py" | wc -l)
            show_success "$TEST_COUNT tests disponibles"

            read -p "Voulez-vous ex√©cuter les tests? (o/n): " -r
            if [[ $REPLY =~ ^[Oo]$ ]]; then
                show_info "Ex√©cution des tests..."
                python3 -m pytest tests/ -v --tb=short
            fi
        fi

        # V√©rifier le linting
        show_info "V√©rification de la qualit√© du code..."
        read -p "Voulez-vous v√©rifier le linting? (o/n): " -r
        if [[ $REPLY =~ ^[Oo]$ ]]; then
            show_info "Ex√©cution du linting..."
            ./bin/ath-lint.py
        fi

        show_success "Environnement de travail pr√™t !"
        ;;

    "shutdown")
        show_step "üõë Fermeture propre de l'environnement"
        ./bin/ath-clean-shutdown
        ;;

    "full")
        show_step "üîÑ Cycle complet de d√©veloppement"
        echo ""

        # Phase 1: D√©marrage
        show_info "Phase 1: D√©marrage"
        ./bin/ath-quick-start
        echo ""

        # Phase 2: Travail
        show_info "Phase 2: Pr√©paration au travail"
        echo -e "${YELLOW}üí° Vous pouvez maintenant travailler sur votre projet${NC}"
        echo -e "${YELLOW}üí° Utilisez 'ath-test' pour tester, 'ath-lint' pour v√©rifier la qualit√©${NC}"
        echo ""

        read -p "Appuyez sur Entr√©e quand vous avez termin√© votre travail..."

        # Phase 3: Fermeture
        show_info "Phase 3: Fermeture propre"
        ./bin/ath-clean-shutdown
        ;;

    "help")
        echo -e "${PURPLE}üîÑ Workflow Complet Athalia - Aide${NC}"
        echo -e "${PURPLE}================================${NC}"
        echo ""
        echo -e "${CYAN}Commandes disponibles:${NC}"
        echo ""
        echo -e "${GREEN}start${NC} - D√©marrage rapide"
        echo -e "   V√©rifie l'environnement, charge les alias, active l'environnement virtuel"
        echo -e "   Usage: $0 start"
        echo ""
        echo -e "${GREEN}work${NC} - Pr√©paration au travail"
        echo -e "   V√©rifie l'√©tat Git, propose de commiter, ex√©cute les tests et le linting"
        echo -e "   Usage: $0 work"
        echo ""
        echo -e "${GREEN}shutdown${NC} - Fermeture propre"
        echo -e "   Commit, push, arr√™t des processus, nettoyage, g√©n√©ration de rapport"
        echo -e "   Usage: $0 shutdown"
        echo ""
        echo -e "${GREEN}full${NC} - Cycle complet"
        echo -e "   Ex√©cute start ‚Üí work ‚Üí shutdown en s√©quence"
        echo -e "   Usage: $0 full"
        echo ""
        echo -e "${CYAN}Workflow recommand√©:${NC}"
        echo -e "   1. ${YELLOW}$0 start${NC}    - Au d√©but de votre session"
        echo -e "   2. ${YELLOW}$0 work${NC}     - Avant de commencer √† coder"
        echo -e "   3. ${YELLOW}$0 shutdown${NC} - √Ä la fin de votre session"
        echo ""
        echo -e "${CYAN}Ou utilisez le cycle complet:${NC}"
        echo -e "   ${YELLOW}$0 full${NC} - Tout en une seule commande"
        echo ""
        echo -e "${YELLOW}üí° Conseil: Utilisez 'full' pour un workflow automatis√© complet${NC}"
        ;;

    *)
        show_error "Commande inconnue: $COMMAND"
        echo -e "${YELLOW}Utilisez '$0 help' pour voir les commandes disponibles${NC}"
        exit 1
        ;;
esac

echo ""
echo -e "${PURPLE}üéâ Workflow termin√© avec succ√®s !${NC}"
