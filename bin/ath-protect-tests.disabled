#!/bin/bash
# Script de protection contre la cr√©ation automatique de fichiers de tests

set -e

PROJECT_ROOT="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
TESTS_DIR="$PROJECT_ROOT/tests"

echo "üõ°Ô∏è  Protection des tests activ√©e..."

# Fonction de nettoyage des fichiers de tests automatiques
clean_auto_tests() {
    echo "üßπ Nettoyage des fichiers de tests automatiques..."
    
    # Supprimer les fichiers de tests automatiques
    find "$TESTS_DIR" -name "test_unit_*.py" -delete 2>/dev/null || true
    find "$TESTS_DIR" -name "test_integration_*.py" -delete 2>/dev/null || true
    find "$TESTS_DIR" -name "test_performance_*.py" -delete 2>/dev/null || true
    
    echo "‚úÖ Nettoyage termin√©"
}

# Fonction de surveillance en temps r√©el
watch_tests() {
    echo "üëÄ Surveillance du r√©pertoire tests..."
    
    # Utiliser fswatch si disponible, sinon inotifywait
    if command -v fswatch >/dev/null 2>&1; then
        fswatch -o "$TESTS_DIR" | while read num; do
            clean_auto_tests
        done
    elif command -v inotifywait >/dev/null 2>&1; then
        inotifywait -m -r -e create,modify "$TESTS_DIR" | while read path action file; do
            if [[ "$file" =~ ^test_(unit|integration|performance)_ ]]; then
                echo "üö´ Fichier de test automatique d√©tect√©: $file"
                clean_auto_tests
            fi
        done
    else
        echo "‚ö†Ô∏è  Aucun outil de surveillance disponible. Utilisation du mode polling..."
        while true; do
            clean_auto_tests
            sleep 5
        done
    fi
}

# Fonction pour bloquer les processus qui cr√©ent des tests automatiques
block_auto_testers() {
    echo "üö´ Blocage des processus auto_tester..."
    
    # Tuer les processus auto_tester en cours
    pkill -f "auto_tester" 2>/dev/null || true
    
    # Emp√™cher l'ex√©cution d'auto_tester.py
    if [ -f "$PROJECT_ROOT/athalia_core/auto_tester.py" ]; then
        chmod 000 "$PROJECT_ROOT/athalia_core/auto_tester.py"
        echo "üîí auto_tester.py d√©sactiv√©"
    fi
}

# Fonction pour restaurer auto_tester.py
restore_auto_tester() {
    if [ -f "$PROJECT_ROOT/athalia_core/auto_tester.py" ]; then
        chmod 644 "$PROJECT_ROOT/athalia_core/auto_tester.py"
        echo "üîì auto_tester.py restaur√©"
    fi
}

# Fonction d'aide
show_help() {
    echo "Usage: $0 [COMMANDE]"
    echo ""
    echo "Commandes:"
    echo "  clean     - Nettoyer les fichiers de tests automatiques"
    echo "  watch     - Surveiller en temps r√©el (mode continu)"
    echo "  block     - Bloquer les processus auto_tester"
    echo "  restore   - Restaurer auto_tester.py"
    echo "  help      - Afficher cette aide"
    echo ""
    echo "Exemples:"
    echo "  $0 clean          # Nettoyer une fois"
    echo "  $0 watch          # Surveiller en continu"
    echo "  $0 block          # Bloquer auto_tester"
}

# Gestion des arguments
case "${1:-help}" in
    clean)
        clean_auto_tests
        ;;
    watch)
        clean_auto_tests
        watch_tests
        ;;
    block)
        block_auto_testers
        ;;
    restore)
        restore_auto_tester
        ;;
    help|--help|-h)
        show_help
        ;;
    *)
        echo "‚ùå Commande inconnue: $1"
        show_help
        exit 1
        ;;
esac 