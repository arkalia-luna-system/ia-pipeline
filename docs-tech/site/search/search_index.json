{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Athalia Pipeline IA","text":"<p>Bienvenue dans la documentation technique et utilisateur du g\u00e9n\u00e9rateur IA souverain.</p> <ul> <li>Architecture</li> <li>Utilisation rapide</li> <li>Modules</li> <li>Tests</li> <li>Automatisation</li> <li>FAQ</li> </ul> <p>Ce pipeline g\u00e9n\u00e8re, teste, documente, audite et exporte automatiquement des projets IA modulaires, robustes et open source.</p>"},{"location":"architecture/","title":"Architecture","text":"<ul> <li>athalia_core/ : modules (g\u00e9n\u00e9ration, nettoyage, CI, dashboard, onboarding, s\u00e9curit\u00e9)</li> <li>tests/ : tests unitaires et d\u2019int\u00e9gration</li> <li>Taskfile.yaml : automatisation</li> <li>.gitignore : workspace propre</li> <li>docs-tech/ : documentation technique (mkdocs)</li> </ul> <p>Chaque module est ind\u00e9pendant, test\u00e9, logg\u00e9, et extensible. </p>"},{"location":"automatisation/","title":"Automatisation","text":"<ul> <li><code>Taskfile.yaml</code> pour build, test, lint, clean, export, audit</li> <li>Nettoyage automatique du repo</li> <li>Export pipeline complet (tar.gz)</li> </ul>"},{"location":"automatisation/#extension","title":"Extension","text":"<p>Ajoutez vos propres t\u00e2ches ou scripts selon vos besoins CI/CD. </p>"},{"location":"changelog/","title":"Changelog","text":"<ul> <li>v1.0 : Refactoring modulaire, tests, CI, audit s\u00e9curit\u00e9, doc auto, automatisation compl\u00e8te. </li> </ul>"},{"location":"ci/","title":"Module CI/CD","text":"<p>Ce module g\u00e8re\u202f: - La g\u00e9n\u00e9ration du workflow GitHub Actions (ci.yaml) - L\u2019ajout du badge de couverture dans le README</p>"},{"location":"ci/#extension","title":"Extension","text":"<p>Adaptez le workflow \u00e0 vos besoins CI/CD (tests, build, d\u00e9ploiement\u2026). </p>"},{"location":"cleanup/","title":"Module Nettoyage","text":"<p>Ce module supprime automatiquement\u202f: - Les anciens fichiers de test non-suffix\u00e9s - Les caches Python (pycache, .pyc) - Les artefacts inutiles</p> <p>Appelable via le menu CLI ou Taskfile.</p>"},{"location":"cleanup/#extension","title":"Extension","text":"<p>Ajoutez d\u2019autres patterns \u00e0 nettoyer si besoin. </p>"},{"location":"dashboard/","title":"Module Dashboard","text":"<p>Ce module g\u00e8re\u202f: - L\u2019enrichissement du fichier GENESIS.md (audit, perfs, tests) - La g\u00e9n\u00e9ration du dashboard HTML global - Les diagrammes Mermaid multi-projets - Les logs d\u2019audit</p>"},{"location":"dashboard/#extension","title":"Extension","text":"<p>Ajoutez vos propres m\u00e9triques ou visualisations. </p>"},{"location":"faq/","title":"FAQ","text":"<p>Q : Comment ajouter un nouveau module\u202f? A : Ajoutez un fichier dans <code>athalia_core/</code>, testez-le dans <code>tests/</code>, documentez-le dans la doc.</p> <p>Q : Comment nettoyer le repo\u202f? A : <code>task clean</code> ou via le menu CLI.</p> <p>Q : Comment auditer la s\u00e9curit\u00e9\u202f? A : <code>task audit</code> ou via le menu CLI.</p> <p>Q : Comment exporter le pipeline\u202f? A : <code>task export</code>. </p>"},{"location":"generation/","title":"Module G\u00e9n\u00e9ration","text":"<p>Ce module g\u00e8re\u202f: - La g\u00e9n\u00e9ration de blueprint IA (API ou mock) - La sauvegarde du blueprint - L\u2019injection des prompts/scripts/agents - La g\u00e9n\u00e9ration des tests, docs, tickets, openapi, s\u00e9quence</p> <p>Toutes les fonctions sont test\u00e9es et loggu\u00e9es.</p>"},{"location":"generation/#extension","title":"Extension","text":"<p>Ajoutez vos propres templates ou prompts dans <code>templates/</code> et <code>prompts/</code>. </p>"},{"location":"onboarding/","title":"Module Onboarding","text":"<p>Ce module g\u00e8re\u202f: - La g\u00e9n\u00e9ration du guide Markdown (ONBOARDING.md) - Le script CLI d\u2019onboarding - Le guide interactif HTML</p>"},{"location":"onboarding/#extension","title":"Extension","text":"<p>Ajoutez des \u00e9tapes ou guides personnalis\u00e9s selon vos besoins. </p>"},{"location":"security/","title":"Module S\u00e9curit\u00e9","text":"<p>Ce module g\u00e8re\u202f: - L\u2019audit automatique des patterns \u00e0 risque (cl\u00e9 API, mot de passe, shell, etc.) - Le log des r\u00e9sultats dans <code>security_audit.log</code></p>"},{"location":"security/#extension","title":"Extension","text":"<p>Ajoutez vos propres patterns ou int\u00e9grations (SAST, d\u00e9pendances\u2026). </p>"},{"location":"tests/","title":"Tests","text":"<ul> <li>Chaque module a ses tests unitaires dans <code>tests/</code></li> <li>Tests d\u2019int\u00e9gration pour la g\u00e9n\u00e9ration compl\u00e8te</li> <li>Couverture mesurable avec pytest-cov</li> </ul>"},{"location":"tests/#extension","title":"Extension","text":"<p>Ajoutez des tests de performance, scalabilit\u00e9, s\u00e9curit\u00e9, etc. </p>"},{"location":"utilisation/","title":"Utilisation rapide","text":""},{"location":"utilisation/#lancer-le-menu-cli","title":"Lancer le menu CLI","text":"<pre><code>python3 -m athalia_core.main\n</code></pre>"},{"location":"utilisation/#automatiser-task","title":"Automatiser (Task)","text":"<pre><code>task build   # G\u00e9n\u00e9rer un projet IA\ntask test    # Lancer tous les tests\ntask clean   # Nettoyer tous les artefacts\ntask audit   # Audit s\u00e9curit\u00e9 sur tous les projets\n</code></pre>"},{"location":"utilisation/#tests","title":"Tests","text":"<pre><code>pytest tests/\n</code></pre>"},{"location":"utilisation/#export","title":"Export","text":"<pre><code>task export\n</code></pre>"}]}