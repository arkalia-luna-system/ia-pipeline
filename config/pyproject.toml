[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "athalia-ai"
version = "1.0.0"
description = "Pipeline d'industrialisation IA pour génération automatique de projets"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Arkalia Luna System", email = "contact@arkalia-luna.com"}
]
maintainers = [
    {name = "Arkalia Luna System", email = "contact@arkalia-luna.com"}
]
keywords = ["ai", "code-generation", "automation", "testing", "documentation", "ci-cd"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Code Generators",
    "Topic :: Software Development :: Testing",
    "Topic :: Software Development :: Documentation",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.10"
dependencies = [
    "pyyaml>=6.0",
    "requests>=2.28.0",
    "jinja2>=3.1.0",
    "click>=8.1.0",
    "rich>=13.0.0",
    "psutil>=5.9.0",
    "anthropic>=0.7.0",
    "openai>=1.0.0",
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "mkdocs>=1.4.0",
    "mkdocs-material>=9.0.0",
    "streamlit>=1.28.0",
    "plotly>=5.15.0",
    "matplotlib>=3.7.0",
    "python-dotenv>=1.0.0",
    "tqdm>=4.65.0",
    "colorama>=0.4.6",
]

[project.optional-dependencies]
dev = [
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
]
ai = [
    "anthropic>=0.7.0",
    "openai>=1.0.0",
]
dashboard = [
    "streamlit>=1.28.0",
    "plotly>=5.15.0",
]

[project.scripts]
athalia = "athalia_core.main:main"
athalia-cli = "athalia_core.cli:cli"
athalia-dashboard = "athalia_core.dashboard:main"

[project.urls]
Homepage = "https://github.com/arkalia-luna-system/ia-pipeline"
Documentation = "https://github.com/arkalia-luna-system/ia-pipeline/tree/main/docs-tech"
Repository = "https://github.com/arkalia-luna-system/ia-pipeline"
"Bug Tracker" = "https://github.com/arkalia-luna-system/ia-pipeline/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["athalia_core*"]

[tool.setuptools.package-data]
athalia_core = ["templates/*.py", "classification/*.py", "plugins/*.py"]

# Configuration pour éviter les fichiers .pyc en développement
[tool.pytest.ini_options]
pythonpath = ["."]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--verbose",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings",
    "--cache-clear",  # Nettoie le cache pytest à chaque exécution
]
markers = [
    "fast: marks tests as fast (deselect with '-m \"not fast\"')",
    "medium: marks tests as medium speed (deselect with '-m \"not medium\"')",
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "benchmark: marks tests as benchmark tests",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "performance: marks tests as performance tests",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true 