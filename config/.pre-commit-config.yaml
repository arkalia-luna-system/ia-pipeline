# Configuration pre-commit pour Athalia
# Automatise les vérifications avant chaque commit

repos:
  # Hooks de base
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        args: [--markdown-linebreak-ext=md]
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-added-large-files
        args: ['--maxkb=10240']  # 10MB max
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: check-json
      - id: check-toml
      - id: debug-statements
      - id: name-tests-test
      - id: check-docstring-first
      - id: check-ast
      - id: requirements-txt-fixer
      - id: fix-byte-order-marker
      - id: mixed-line-ending
        args: [--fix=lf]

  # Python - Formatage et linting
  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        language_version: python3
        args: [--line-length=88, --preview]
        exclude: ^(archive|backups|logs|\.venv|venv)/

  # Python - Organisation des imports
  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: [--profile=black, --line-length=88]
        exclude: ^(archive|backups|logs|\.venv|venv)/

  # Python - Linting avec flake8
  - repo: https://github.com/pycqa/flake8
    rev: 7.0.0
    hooks:
      - id: flake8
        args: [
          --config=config/.flake8,
          --max-line-length=88,
          --extend-ignore=E203,W503,E501,W291,W293,F401,F541,F841,E712,E731,E402,F601,E302,W292,E722
        ]
        exclude: ^(archive|backups|logs|\.venv|venv|tests/bin)/

  # Python - Vérification des types
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        args: [--config-file=config/pyproject.toml]
        exclude: ^(tests|archive|backups|logs|\.venv|venv)/
        additional_dependencies: [types-requests, types-PyYAML]

  # Sécurité
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: [-c, config/.bandit, -r, athalia_core, scripts, tools]
        exclude: ^(tests|archive|backups|logs|\.venv|venv)/

  # Vérification des vulnérabilités
  - repo: https://github.com/PyCQA/safety
    rev: v2.3.5
    hooks:
      - id: safety
        args: [check, --json]

  # Audit des dépendances
  - repo: https://github.com/pypa/pip-audit
    rev: v2.6.1
    hooks:
      - id: pip-audit
        args: [--format=json]

  # Hooks personnalisés Athalia
  - repo: local
    hooks:
      # Test des fichiers polluants
      - id: check-polluting-files
        name: Check polluting files
        entry: python -m pytest tests/test_no_polluting_files.py::TestNoPollutingFiles::test_no_macos_hidden_files -q
        language: system
        pass_filenames: false
        always_run: true

      # Test des imports
      - id: check-imports
        name: Check imports
        entry: python -m pytest tests/test_imports_all.py -q
        language: system
        pass_filenames: false
        always_run: true

      # Test de l'encodage
      - id: check-encoding
        name: Check UTF-8 encoding
        entry: python -m pytest tests/test_encoding_utf8.py -q
        language: system
        pass_filenames: false
        always_run: true

      # Nettoyage automatique des caches
      - id: clean-caches
        name: Clean Python caches
        entry: bash -c 'find . -type d -name "__pycache__" -exec rm -rf {} + 2>/dev/null || true; find . -name "*.pyc" -delete 2>/dev/null || true'
        language: system
        pass_filenames: false
        always_run: true

      # Vérification de la configuration
      - id: check-config
        name: Check essential config files
        entry: bash -c 'for file in config/requirements.txt config/athalia_config.yaml README.md; do if [ ! -f "$file" ]; then echo "Missing config file: $file"; exit 1; fi; done'
        language: system
        pass_filenames: false
        always_run: true

# Configuration globale
default_language_version:
  python: python3

# Exclusions globales
exclude: |
  (?x)^(
      archive/|
      backups/|
      logs/|
      \.venv/|
      venv/|
      __pycache__/|
      \.pytest_cache/|
      \.git/|
      node_modules/|
      build/|
      dist/
  )$ 